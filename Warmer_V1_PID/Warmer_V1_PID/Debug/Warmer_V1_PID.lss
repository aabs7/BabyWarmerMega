
Warmer_V1_PID.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800200  00001808  0000189c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001808  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007b  0080020e  0080020e  000018aa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000018aa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000018dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002f0  00000000  00000000  0000191c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000531d  00000000  00000000  00001c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001ac6  00000000  00000000  00006f29  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016bf  00000000  00000000  000089ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007c4  00000000  00000000  0000a0b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000175c  00000000  00000000  0000a874  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001e94  00000000  00000000  0000bfd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000260  00000000  00000000  0000de64  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	ef c0       	rjmp	.+478    	; 0x1e0 <__ctors_end>
       2:	00 00       	nop
       4:	1d c1       	rjmp	.+570    	; 0x240 <__bad_interrupt>
       6:	00 00       	nop
       8:	1b c1       	rjmp	.+566    	; 0x240 <__bad_interrupt>
       a:	00 00       	nop
       c:	19 c1       	rjmp	.+562    	; 0x240 <__bad_interrupt>
       e:	00 00       	nop
      10:	17 c1       	rjmp	.+558    	; 0x240 <__bad_interrupt>
      12:	00 00       	nop
      14:	f4 c2       	rjmp	.+1512   	; 0x5fe <__vector_5>
      16:	00 00       	nop
      18:	13 c1       	rjmp	.+550    	; 0x240 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	11 c1       	rjmp	.+546    	; 0x240 <__bad_interrupt>
      1e:	00 00       	nop
      20:	0f c1       	rjmp	.+542    	; 0x240 <__bad_interrupt>
      22:	00 00       	nop
      24:	0d c1       	rjmp	.+538    	; 0x240 <__bad_interrupt>
      26:	00 00       	nop
      28:	0b c1       	rjmp	.+534    	; 0x240 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	09 c1       	rjmp	.+530    	; 0x240 <__bad_interrupt>
      2e:	00 00       	nop
      30:	07 c1       	rjmp	.+526    	; 0x240 <__bad_interrupt>
      32:	00 00       	nop
      34:	94 c2       	rjmp	.+1320   	; 0x55e <__vector_13>
      36:	00 00       	nop
      38:	03 c1       	rjmp	.+518    	; 0x240 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	43 c1       	rjmp	.+646    	; 0x2c4 <__vector_15>
      3e:	00 00       	nop
      40:	ff c0       	rjmp	.+510    	; 0x240 <__bad_interrupt>
      42:	00 00       	nop
      44:	fd c0       	rjmp	.+506    	; 0x240 <__bad_interrupt>
      46:	00 00       	nop
      48:	fb c0       	rjmp	.+502    	; 0x240 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	f9 c0       	rjmp	.+498    	; 0x240 <__bad_interrupt>
      4e:	00 00       	nop
      50:	f7 c0       	rjmp	.+494    	; 0x240 <__bad_interrupt>
      52:	00 00       	nop
      54:	f5 c0       	rjmp	.+490    	; 0x240 <__bad_interrupt>
      56:	00 00       	nop
      58:	f3 c0       	rjmp	.+486    	; 0x240 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	f1 c0       	rjmp	.+482    	; 0x240 <__bad_interrupt>
      5e:	00 00       	nop
      60:	ef c0       	rjmp	.+478    	; 0x240 <__bad_interrupt>
      62:	00 00       	nop
      64:	a5 c6       	rjmp	.+3402   	; 0xdb0 <__vector_25>
      66:	00 00       	nop
      68:	eb c0       	rjmp	.+470    	; 0x240 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	e9 c0       	rjmp	.+466    	; 0x240 <__bad_interrupt>
      6e:	00 00       	nop
      70:	e7 c0       	rjmp	.+462    	; 0x240 <__bad_interrupt>
      72:	00 00       	nop
      74:	e5 c0       	rjmp	.+458    	; 0x240 <__bad_interrupt>
      76:	00 00       	nop
      78:	e3 c0       	rjmp	.+454    	; 0x240 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e1 c0       	rjmp	.+450    	; 0x240 <__bad_interrupt>
      7e:	00 00       	nop
      80:	af c2       	rjmp	.+1374   	; 0x5e0 <__vector_32>
      82:	00 00       	nop
      84:	dd c0       	rjmp	.+442    	; 0x240 <__bad_interrupt>
      86:	00 00       	nop
      88:	db c0       	rjmp	.+438    	; 0x240 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	d9 c0       	rjmp	.+434    	; 0x240 <__bad_interrupt>
      8e:	00 00       	nop
      90:	d7 c0       	rjmp	.+430    	; 0x240 <__bad_interrupt>
      92:	00 00       	nop
      94:	d5 c0       	rjmp	.+426    	; 0x240 <__bad_interrupt>
      96:	00 00       	nop
      98:	d3 c0       	rjmp	.+422    	; 0x240 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	d1 c0       	rjmp	.+418    	; 0x240 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	cf c0       	rjmp	.+414    	; 0x240 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	cd c0       	rjmp	.+410    	; 0x240 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	cb c0       	rjmp	.+406    	; 0x240 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	c9 c0       	rjmp	.+402    	; 0x240 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	c7 c0       	rjmp	.+398    	; 0x240 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	c5 c0       	rjmp	.+394    	; 0x240 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	c3 c0       	rjmp	.+390    	; 0x240 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	c1 c0       	rjmp	.+386    	; 0x240 <__bad_interrupt>
      be:	00 00       	nop
      c0:	bf c0       	rjmp	.+382    	; 0x240 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	bd c0       	rjmp	.+378    	; 0x240 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	bb c0       	rjmp	.+374    	; 0x240 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	b9 c0       	rjmp	.+370    	; 0x240 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	b7 c0       	rjmp	.+366    	; 0x240 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	b5 c0       	rjmp	.+362    	; 0x240 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	b3 c0       	rjmp	.+358    	; 0x240 <__bad_interrupt>
      da:	00 00       	nop
      dc:	b1 c0       	rjmp	.+354    	; 0x240 <__bad_interrupt>
      de:	00 00       	nop
      e0:	af c0       	rjmp	.+350    	; 0x240 <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	00 40       	sbci	r16, 0x00	; 0
      e6:	7a 10       	cpse	r7, r10
      e8:	f3 5a       	subi	r31, 0xA3	; 163
      ea:	00 a0       	ldd	r0, Z+32	; 0x20
      ec:	72 4e       	sbci	r23, 0xE2	; 226
      ee:	18 09       	sbc	r17, r8
      f0:	00 10       	cpse	r0, r0
      f2:	a5 d4       	rcall	.+2378   	; 0xa3e <_ZN17Adafruit_MAX3186511temperatureEff+0x180>
      f4:	e8 00       	.word	0x00e8	; ????
      f6:	00 e8       	ldi	r16, 0x80	; 128
      f8:	76 48       	sbci	r23, 0x86	; 134
      fa:	17 00       	.word	0x0017	; ????
      fc:	00 e4       	ldi	r16, 0x40	; 64
      fe:	0b 54       	subi	r16, 0x4B	; 75
     100:	02 00       	.word	0x0002	; ????
     102:	00 ca       	rjmp	.-3072   	; 0xfffff504 <__eeprom_end+0xff7ef504>
     104:	9a 3b       	cpi	r25, 0xBA	; 186
     106:	00 00       	nop
     108:	00 e1       	ldi	r16, 0x10	; 16
     10a:	f5 05       	cpc	r31, r5
     10c:	00 00       	nop
     10e:	80 96       	adiw	r24, 0x20	; 32
     110:	98 00       	.word	0x0098	; ????
     112:	00 00       	nop
     114:	40 42       	sbci	r20, 0x20	; 32
     116:	0f 00       	.word	0x000f	; ????
     118:	00 00       	nop
     11a:	a0 86       	std	Z+8, r10	; 0x08
     11c:	01 00       	.word	0x0001	; ????
     11e:	00 00       	nop
     120:	10 27       	eor	r17, r16
     122:	00 00       	nop
     124:	00 00       	nop
     126:	e8 03       	fmulsu	r22, r16
     128:	00 00       	nop
     12a:	00 00       	nop
     12c:	64 00       	.word	0x0064	; ????
     12e:	00 00       	nop
     130:	00 00       	nop
     132:	0a 00       	.word	0x000a	; ????
     134:	00 00       	nop
     136:	00 00       	nop
     138:	01 00       	.word	0x0001	; ????
     13a:	00 00       	nop
     13c:	00 00       	nop
     13e:	2c 76       	andi	r18, 0x6C	; 108
     140:	d8 88       	ldd	r13, Y+16	; 0x10
     142:	dc 67       	ori	r29, 0x7C	; 124
     144:	4f 08       	sbc	r4, r15
     146:	23 df       	rcall	.-442    	; 0xffffff8e <__eeprom_end+0xff7eff8e>
     148:	c1 df       	rcall	.-126    	; 0xcc <__SREG__+0x8d>
     14a:	ae 59       	subi	r26, 0x9E	; 158
     14c:	e1 b1       	in	r30, 0x01	; 1
     14e:	b7 96       	adiw	r30, 0x27	; 39
     150:	e5 e3       	ldi	r30, 0x35	; 53
     152:	e4 53       	subi	r30, 0x34	; 52
     154:	c6 3a       	cpi	r28, 0xA6	; 166
     156:	e6 51       	subi	r30, 0x16	; 22
     158:	99 76       	andi	r25, 0x69	; 105
     15a:	96 e8       	ldi	r25, 0x86	; 134
     15c:	e6 c2       	rjmp	.+1484   	; 0x72a <_ZN17Adafruit_MAX3186514readRegister16Eh+0x26>
     15e:	84 26       	eor	r8, r20
     160:	eb 89       	ldd	r30, Y+19	; 0x13
     162:	8c 9b       	sbis	0x11, 4	; 17
     164:	62 ed       	ldi	r22, 0xD2	; 210
     166:	40 7c       	andi	r20, 0xC0	; 192
     168:	6f fc       	.word	0xfc6f	; ????
     16a:	ef bc       	out	0x2f, r14	; 47
     16c:	9c 9f       	mul	r25, r28
     16e:	40 f2       	brcs	.-112    	; 0x100 <__trampolines_end+0x1c>
     170:	ba a5       	ldd	r27, Y+42	; 0x2a
     172:	6f a5       	ldd	r22, Y+47	; 0x2f
     174:	f4 90       	lpm	r15, Z
     176:	05 5a       	subi	r16, 0xA5	; 165
     178:	2a f7       	brpl	.-54     	; 0x144 <__trampolines_end+0x60>
     17a:	5c 93       	st	X, r21
     17c:	6b 6c       	ori	r22, 0xCB	; 203
     17e:	f9 67       	ori	r31, 0x79	; 121
     180:	6d c1       	rjmp	.+730    	; 0x45c <main+0xc>
     182:	1b fc       	.word	0xfc1b	; ????
     184:	e0 e4       	ldi	r30, 0x40	; 64
     186:	0d 47       	sbci	r16, 0x7D	; 125
     188:	fe f5       	brtc	.+126    	; 0x208 <__do_copy_data+0x18>
     18a:	20 e6       	ldi	r18, 0x60	; 96
     18c:	b5 00       	.word	0x00b5	; ????
     18e:	d0 ed       	ldi	r29, 0xD0	; 208
     190:	90 2e       	mov	r9, r16
     192:	03 00       	.word	0x0003	; ????
     194:	94 35       	cpi	r25, 0x54	; 84
     196:	77 05       	cpc	r23, r7
     198:	00 80       	ld	r0, Z
     19a:	84 1e       	adc	r8, r20
     19c:	08 00       	.word	0x0008	; ????
     19e:	00 20       	and	r0, r0
     1a0:	4e 0a       	sbc	r4, r30
     1a2:	00 00       	nop
     1a4:	00 c8       	rjmp	.-4096   	; 0xfffff1a6 <__eeprom_end+0xff7ef1a6>
     1a6:	0c 33       	cpi	r16, 0x3C	; 60
     1a8:	33 33       	cpi	r19, 0x33	; 51
     1aa:	33 0f       	add	r19, r19
     1ac:	98 6e       	ori	r25, 0xE8	; 232
     1ae:	12 83       	std	Z+2, r17	; 0x02
     1b0:	11 41       	sbci	r17, 0x11	; 17
     1b2:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1b4:	21 14       	cp	r2, r1
     1b6:	89 3b       	cpi	r24, 0xB9	; 185
     1b8:	e6 55       	subi	r30, 0x56	; 86
     1ba:	16 cf       	rjmp	.-468    	; 0xffffffe8 <__eeprom_end+0xff7effe8>
     1bc:	fe e6       	ldi	r31, 0x6E	; 110
     1be:	db 18       	sub	r13, r11
     1c0:	d1 84       	ldd	r13, Z+9	; 0x09
     1c2:	4b 38       	cpi	r20, 0x8B	; 139
     1c4:	1b f7       	brvc	.-58     	; 0x18c <__trampolines_end+0xa8>
     1c6:	7c 1d       	adc	r23, r12
     1c8:	90 1d       	adc	r25, r0
     1ca:	a4 bb       	out	0x14, r26	; 20
     1cc:	e4 24       	eor	r14, r4
     1ce:	20 32       	cpi	r18, 0x20	; 32
     1d0:	84 72       	andi	r24, 0x24	; 36
     1d2:	5e 22       	and	r5, r30
     1d4:	81 00       	.word	0x0081	; ????
     1d6:	c9 f1       	breq	.+114    	; 0x24a <_ZN8Controls12initControlsEv+0x8>
     1d8:	24 ec       	ldi	r18, 0xC4	; 196
     1da:	a1 e5       	ldi	r26, 0x51	; 81
     1dc:	3d 27       	eor	r19, r29

000001de <__ctors_start>:
     1de:	0e 03       	fmul	r16, r22

000001e0 <__ctors_end>:
     1e0:	11 24       	eor	r1, r1
     1e2:	1f be       	out	0x3f, r1	; 63
     1e4:	cf ef       	ldi	r28, 0xFF	; 255
     1e6:	d1 e2       	ldi	r29, 0x21	; 33
     1e8:	de bf       	out	0x3e, r29	; 62
     1ea:	cd bf       	out	0x3d, r28	; 61
     1ec:	00 e0       	ldi	r16, 0x00	; 0
     1ee:	0c bf       	out	0x3c, r16	; 60

000001f0 <__do_copy_data>:
     1f0:	12 e0       	ldi	r17, 0x02	; 2
     1f2:	a0 e0       	ldi	r26, 0x00	; 0
     1f4:	b2 e0       	ldi	r27, 0x02	; 2
     1f6:	e8 e0       	ldi	r30, 0x08	; 8
     1f8:	f8 e1       	ldi	r31, 0x18	; 24
     1fa:	00 e0       	ldi	r16, 0x00	; 0
     1fc:	0b bf       	out	0x3b, r16	; 59
     1fe:	02 c0       	rjmp	.+4      	; 0x204 <__do_copy_data+0x14>
     200:	07 90       	elpm	r0, Z+
     202:	0d 92       	st	X+, r0
     204:	ae 30       	cpi	r26, 0x0E	; 14
     206:	b1 07       	cpc	r27, r17
     208:	d9 f7       	brne	.-10     	; 0x200 <__do_copy_data+0x10>

0000020a <__do_clear_bss>:
     20a:	22 e0       	ldi	r18, 0x02	; 2
     20c:	ae e0       	ldi	r26, 0x0E	; 14
     20e:	b2 e0       	ldi	r27, 0x02	; 2
     210:	01 c0       	rjmp	.+2      	; 0x214 <.do_clear_bss_start>

00000212 <.do_clear_bss_loop>:
     212:	1d 92       	st	X+, r1

00000214 <.do_clear_bss_start>:
     214:	a9 38       	cpi	r26, 0x89	; 137
     216:	b2 07       	cpc	r27, r18
     218:	e1 f7       	brne	.-8      	; 0x212 <.do_clear_bss_loop>

0000021a <__do_global_ctors>:
     21a:	10 e0       	ldi	r17, 0x00	; 0
     21c:	c0 ef       	ldi	r28, 0xF0	; 240
     21e:	d0 e0       	ldi	r29, 0x00	; 0
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	06 c0       	rjmp	.+12     	; 0x230 <__do_global_ctors+0x16>
     224:	21 97       	sbiw	r28, 0x01	; 1
     226:	01 09       	sbc	r16, r1
     228:	80 2f       	mov	r24, r16
     22a:	fe 01       	movw	r30, r28
     22c:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <__tablejump2__>
     230:	cf 3e       	cpi	r28, 0xEF	; 239
     232:	d1 07       	cpc	r29, r17
     234:	80 e0       	ldi	r24, 0x00	; 0
     236:	08 07       	cpc	r16, r24
     238:	a9 f7       	brne	.-22     	; 0x224 <__do_global_ctors+0xa>
     23a:	0a d1       	rcall	.+532    	; 0x450 <main>
     23c:	0c 94 02 0c 	jmp	0x1804	; 0x1804 <_exit>

00000240 <__bad_interrupt>:
     240:	df ce       	rjmp	.-578    	; 0x0 <__vectors>

00000242 <_ZN8Controls12initControlsEv>:
#include "Controls.h"


void Controls::initControls()
{
	DDR(TRIGGER_PORT) |= (1 << TRIGGER_PIN);
     242:	25 9a       	sbi	0x04, 5	; 4
	DDR(BUZZER_PORT) |= (1 << BUZZER_PIN);
     244:	e1 e0       	ldi	r30, 0x01	; 1
     246:	f1 e0       	ldi	r31, 0x01	; 1
     248:	80 81       	ld	r24, Z
     24a:	80 61       	ori	r24, 0x10	; 16
     24c:	80 83       	st	Z, r24

	TRIGGER_PORT &=~ (1 << TRIGGER_PIN);
     24e:	2d 98       	cbi	0x05, 5	; 5
	//battery monitor pin as input
	DDR(BATT_MONITOR_PORT) &= ~(1<<BATT_MONITOR_PIN_POSITION);
     250:	80 98       	cbi	0x10, 0	; 16
     252:	08 95       	ret

00000254 <_ZN3led8led_initEv>:
#include <avr/io.h>

#define DDR(x) (*(&x - 1))      /* address of data direction register of port x */

void led::led_init() {
	DDR(TS_HIGH_PORT) |= (1 << TS_HIGH_PIN);
     254:	ea e0       	ldi	r30, 0x0A	; 10
     256:	f1 e0       	ldi	r31, 0x01	; 1
     258:	80 81       	ld	r24, Z
     25a:	82 60       	ori	r24, 0x02	; 2
     25c:	80 83       	st	Z, r24
	DDR(TA_HIGH_PORT) |= (1 << TA_HIGH_PIN);
     25e:	80 81       	ld	r24, Z
     260:	80 62       	ori	r24, 0x20	; 32
     262:	80 83       	st	Z, r24
	DDR(SET_TEMP_PORT) |= (1 << SET_TEMP_PIN);
     264:	80 81       	ld	r24, Z
     266:	88 60       	ori	r24, 0x08	; 8
     268:	80 83       	st	Z, r24
	DDR(SENSOR_FAIL_PORT) |= (1 << SENSOR_FAIL_PIN);
     26a:	6b 9a       	sbi	0x0d, 3	; 13
	DDR(HEATER_FAIL_PORT) |= (1 << HEATER_FAIL_PIN);
     26c:	e1 e0       	ldi	r30, 0x01	; 1
     26e:	f1 e0       	ldi	r31, 0x01	; 1
     270:	80 81       	ld	r24, Z
     272:	88 60       	ori	r24, 0x08	; 8
     274:	80 83       	st	Z, r24
	DDR(POWER_PORT) |= (1 << POWER_PIN);
     276:	9d 9a       	sbi	0x13, 5	; 19
     278:	08 95       	ret

0000027a <_Z31Initialize_External_Interrupt_4v>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     27a:	6c 98       	cbi	0x0d, 4	; 13
     27c:	74 98       	cbi	0x0e, 4	; 14
     27e:	e9 e6       	ldi	r30, 0x69	; 105
     280:	f0 e0       	ldi	r31, 0x00	; 0
     282:	80 81       	ld	r24, Z
     284:	82 60       	ori	r24, 0x02	; 2
     286:	80 83       	st	Z, r24
     288:	ec 9a       	sbi	0x1d, 4	; 29
     28a:	e4 9a       	sbi	0x1c, 4	; 28
     28c:	08 95       	ret

0000028e <_Z18InitializePIDTimerv>:
     28e:	e1 e9       	ldi	r30, 0x91	; 145
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	80 81       	ld	r24, Z
     294:	8b 60       	ori	r24, 0x0B	; 11
     296:	80 83       	st	Z, r24
     298:	e0 e9       	ldi	r30, 0x90	; 144
     29a:	f0 e0       	ldi	r31, 0x00	; 0
     29c:	80 81       	ld	r24, Z
     29e:	80 64       	ori	r24, 0x40	; 64
     2a0:	80 83       	st	Z, r24
     2a2:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     2a6:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     2aa:	84 e6       	ldi	r24, 0x64	; 100
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     2b2:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
     2b6:	e1 e7       	ldi	r30, 0x71	; 113
     2b8:	f0 e0       	ldi	r31, 0x00	; 0
     2ba:	80 81       	ld	r24, Z
     2bc:	82 60       	ori	r24, 0x02	; 2
     2be:	80 83       	st	Z, r24
     2c0:	c1 9a       	sbi	0x18, 1	; 24
     2c2:	08 95       	ret

000002c4 <__vector_15>:
     2c4:	1f 92       	push	r1
     2c6:	0f 92       	push	r0
     2c8:	0f b6       	in	r0, 0x3f	; 63
     2ca:	0f 92       	push	r0
     2cc:	11 24       	eor	r1, r1
     2ce:	8f 93       	push	r24
     2d0:	9f 93       	push	r25
     2d2:	af 93       	push	r26
     2d4:	bf 93       	push	r27
     2d6:	80 91 6f 02 	lds	r24, 0x026F	; 0x80026f <timer2_millis>
     2da:	90 91 70 02 	lds	r25, 0x0270	; 0x800270 <timer2_millis+0x1>
     2de:	a0 91 71 02 	lds	r26, 0x0271	; 0x800271 <timer2_millis+0x2>
     2e2:	b0 91 72 02 	lds	r27, 0x0272	; 0x800272 <timer2_millis+0x3>
     2e6:	01 96       	adiw	r24, 0x01	; 1
     2e8:	a1 1d       	adc	r26, r1
     2ea:	b1 1d       	adc	r27, r1
     2ec:	80 93 6f 02 	sts	0x026F, r24	; 0x80026f <timer2_millis>
     2f0:	90 93 70 02 	sts	0x0270, r25	; 0x800270 <timer2_millis+0x1>
     2f4:	a0 93 71 02 	sts	0x0271, r26	; 0x800271 <timer2_millis+0x2>
     2f8:	b0 93 72 02 	sts	0x0272, r27	; 0x800272 <timer2_millis+0x3>
     2fc:	80 91 6b 02 	lds	r24, 0x026B	; 0x80026b <timer2_fract>
     300:	90 91 6c 02 	lds	r25, 0x026C	; 0x80026c <timer2_fract+0x1>
     304:	a0 91 6d 02 	lds	r26, 0x026D	; 0x80026d <timer2_fract+0x2>
     308:	b0 91 6e 02 	lds	r27, 0x026E	; 0x80026e <timer2_fract+0x3>
     30c:	03 96       	adiw	r24, 0x03	; 3
     30e:	a1 1d       	adc	r26, r1
     310:	b1 1d       	adc	r27, r1
     312:	80 93 6b 02 	sts	0x026B, r24	; 0x80026b <timer2_fract>
     316:	90 93 6c 02 	sts	0x026C, r25	; 0x80026c <timer2_fract+0x1>
     31a:	a0 93 6d 02 	sts	0x026D, r26	; 0x80026d <timer2_fract+0x2>
     31e:	b0 93 6e 02 	sts	0x026E, r27	; 0x80026e <timer2_fract+0x3>
     322:	80 91 6b 02 	lds	r24, 0x026B	; 0x80026b <timer2_fract>
     326:	90 91 6c 02 	lds	r25, 0x026C	; 0x80026c <timer2_fract+0x1>
     32a:	a0 91 6d 02 	lds	r26, 0x026D	; 0x80026d <timer2_fract+0x2>
     32e:	b0 91 6e 02 	lds	r27, 0x026E	; 0x80026e <timer2_fract+0x3>
     332:	8d 37       	cpi	r24, 0x7D	; 125
     334:	91 05       	cpc	r25, r1
     336:	a1 05       	cpc	r26, r1
     338:	b1 05       	cpc	r27, r1
     33a:	38 f1       	brcs	.+78     	; 0x38a <__vector_15+0xc6>
     33c:	80 91 6b 02 	lds	r24, 0x026B	; 0x80026b <timer2_fract>
     340:	90 91 6c 02 	lds	r25, 0x026C	; 0x80026c <timer2_fract+0x1>
     344:	a0 91 6d 02 	lds	r26, 0x026D	; 0x80026d <timer2_fract+0x2>
     348:	b0 91 6e 02 	lds	r27, 0x026E	; 0x80026e <timer2_fract+0x3>
     34c:	8d 57       	subi	r24, 0x7D	; 125
     34e:	91 09       	sbc	r25, r1
     350:	a1 09       	sbc	r26, r1
     352:	b1 09       	sbc	r27, r1
     354:	80 93 6b 02 	sts	0x026B, r24	; 0x80026b <timer2_fract>
     358:	90 93 6c 02 	sts	0x026C, r25	; 0x80026c <timer2_fract+0x1>
     35c:	a0 93 6d 02 	sts	0x026D, r26	; 0x80026d <timer2_fract+0x2>
     360:	b0 93 6e 02 	sts	0x026E, r27	; 0x80026e <timer2_fract+0x3>
     364:	80 91 6f 02 	lds	r24, 0x026F	; 0x80026f <timer2_millis>
     368:	90 91 70 02 	lds	r25, 0x0270	; 0x800270 <timer2_millis+0x1>
     36c:	a0 91 71 02 	lds	r26, 0x0271	; 0x800271 <timer2_millis+0x2>
     370:	b0 91 72 02 	lds	r27, 0x0272	; 0x800272 <timer2_millis+0x3>
     374:	01 96       	adiw	r24, 0x01	; 1
     376:	a1 1d       	adc	r26, r1
     378:	b1 1d       	adc	r27, r1
     37a:	80 93 6f 02 	sts	0x026F, r24	; 0x80026f <timer2_millis>
     37e:	90 93 70 02 	sts	0x0270, r25	; 0x800270 <timer2_millis+0x1>
     382:	a0 93 71 02 	sts	0x0271, r26	; 0x800271 <timer2_millis+0x2>
     386:	b0 93 72 02 	sts	0x0272, r27	; 0x800272 <timer2_millis+0x3>
     38a:	bf 91       	pop	r27
     38c:	af 91       	pop	r26
     38e:	9f 91       	pop	r25
     390:	8f 91       	pop	r24
     392:	0f 90       	pop	r0
     394:	0f be       	out	0x3f, r0	; 63
     396:	0f 90       	pop	r0
     398:	1f 90       	pop	r1
     39a:	18 95       	reti

0000039c <_Z12init_devicesv>:
     39c:	cf 92       	push	r12
     39e:	df 92       	push	r13
     3a0:	ef 92       	push	r14
     3a2:	ff 92       	push	r15
     3a4:	0f 93       	push	r16
     3a6:	1f 93       	push	r17
     3a8:	cf 93       	push	r28
     3aa:	df 93       	push	r29
     3ac:	78 94       	sei
     3ae:	82 e6       	ldi	r24, 0x62	; 98
     3b0:	92 e0       	ldi	r25, 0x02	; 2
     3b2:	47 df       	rcall	.-370    	; 0x242 <_ZN8Controls12initControlsEv>
     3b4:	8a e4       	ldi	r24, 0x4A	; 74
     3b6:	92 e0       	ldi	r25, 0x02	; 2
     3b8:	4d df       	rcall	.-358    	; 0x254 <_ZN3led8led_initEv>
     3ba:	62 e0       	ldi	r22, 0x02	; 2
     3bc:	70 e0       	ldi	r23, 0x00	; 0
     3be:	85 e6       	ldi	r24, 0x65	; 101
     3c0:	92 e0       	ldi	r25, 0x02	; 2
     3c2:	81 d4       	rcall	.+2306   	; 0xcc6 <_ZN6Timerr11setTimerNumEi>
     3c4:	85 e6       	ldi	r24, 0x65	; 101
     3c6:	92 e0       	ldi	r25, 0x02	; 2
     3c8:	82 d4       	rcall	.+2308   	; 0xcce <_ZN6Timerr19setCompareInterruptEv>
     3ca:	68 ec       	ldi	r22, 0xC8	; 200
     3cc:	70 e0       	ldi	r23, 0x00	; 0
     3ce:	85 e6       	ldi	r24, 0x65	; 101
     3d0:	92 e0       	ldi	r25, 0x02	; 2
     3d2:	83 d4       	rcall	.+2310   	; 0xcda <_ZN6Timerr16startCustomTimerEi>
     3d4:	8e e0       	ldi	r24, 0x0E	; 14
     3d6:	92 e0       	ldi	r25, 0x02	; 2
     3d8:	42 d4       	rcall	.+2180   	; 0xc5e <_ZN3PWM7InitPWMEv>
     3da:	4f df       	rcall	.-354    	; 0x27a <_Z31Initialize_External_Interrupt_4v>
     3dc:	83 e1       	ldi	r24, 0x13	; 19
     3de:	92 e0       	ldi	r25, 0x02	; 2
     3e0:	67 d3       	rcall	.+1742   	; 0xab0 <_ZN3PID10InitializeEv>
     3e2:	55 df       	rcall	.-342    	; 0x28e <_Z18InitializePIDTimerv>
     3e4:	c3 e1       	ldi	r28, 0x13	; 19
     3e6:	d2 e0       	ldi	r29, 0x02	; 2
     3e8:	1d 8a       	std	Y+21, r1	; 0x15
     3ea:	1e 8a       	std	Y+22, r1	; 0x16
     3ec:	1f 8a       	std	Y+23, r1	; 0x17
     3ee:	18 8e       	std	Y+24, r1	; 0x18
     3f0:	80 e0       	ldi	r24, 0x00	; 0
     3f2:	98 e3       	ldi	r25, 0x38	; 56
     3f4:	ac e9       	ldi	r26, 0x9C	; 156
     3f6:	b5 e4       	ldi	r27, 0x45	; 69
     3f8:	89 8b       	std	Y+17, r24	; 0x11
     3fa:	9a 8b       	std	Y+18, r25	; 0x12
     3fc:	ab 8b       	std	Y+19, r26	; 0x13
     3fe:	bc 8b       	std	Y+20, r27	; 0x14
     400:	60 91 02 02 	lds	r22, 0x0202	; 0x800202 <set_temperature>
     404:	70 91 03 02 	lds	r23, 0x0203	; 0x800203 <set_temperature+0x1>
     408:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <set_temperature+0x2>
     40c:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <set_temperature+0x3>
     410:	b0 d5       	rcall	.+2912   	; 0xf72 <__fixsfsi>
     412:	7e ab       	std	Y+54, r23	; 0x36
     414:	6d ab       	std	Y+53, r22	; 0x35
     416:	0f 2e       	mov	r0, r31
     418:	fa e0       	ldi	r31, 0x0A	; 10
     41a:	cf 2e       	mov	r12, r31
     41c:	f7 ed       	ldi	r31, 0xD7	; 215
     41e:	df 2e       	mov	r13, r31
     420:	f3 ea       	ldi	r31, 0xA3	; 163
     422:	ef 2e       	mov	r14, r31
     424:	fb e3       	ldi	r31, 0x3B	; 59
     426:	ff 2e       	mov	r15, r31
     428:	f0 2d       	mov	r31, r0
     42a:	06 eb       	ldi	r16, 0xB6	; 182
     42c:	13 ef       	ldi	r17, 0xF3	; 243
     42e:	25 e1       	ldi	r18, 0x15	; 21
     430:	30 e4       	ldi	r19, 0x40	; 64
     432:	4e e0       	ldi	r20, 0x0E	; 14
     434:	5d e2       	ldi	r21, 0x2D	; 45
     436:	6a eb       	ldi	r22, 0xBA	; 186
     438:	7f e3       	ldi	r23, 0x3F	; 63
     43a:	ce 01       	movw	r24, r28
     43c:	5e d3       	rcall	.+1724   	; 0xafa <_ZN3PID7Set_PIDEfff>
     43e:	df 91       	pop	r29
     440:	cf 91       	pop	r28
     442:	1f 91       	pop	r17
     444:	0f 91       	pop	r16
     446:	ff 90       	pop	r15
     448:	ef 90       	pop	r14
     44a:	df 90       	pop	r13
     44c:	cf 90       	pop	r12
     44e:	08 95       	ret

00000450 <main>:
     450:	62 d4       	rcall	.+2244   	; 0xd16 <_Z9initUART0v>
     452:	61 e0       	ldi	r22, 0x01	; 1
     454:	8d e5       	ldi	r24, 0x5D	; 93
     456:	92 e0       	ldi	r25, 0x02	; 2
     458:	f1 d1       	rcall	.+994    	; 0x83c <_ZN17Adafruit_MAX318655beginEh>
     45a:	a0 df       	rcall	.-192    	; 0x39c <_Z12init_devicesv>
     45c:	8f e3       	ldi	r24, 0x3F	; 63
     45e:	9c e9       	ldi	r25, 0x9C	; 156
     460:	01 97       	sbiw	r24, 0x01	; 1
     462:	f1 f7       	brne	.-4      	; 0x460 <main+0x10>
     464:	00 c0       	rjmp	.+0      	; 0x466 <main+0x16>
     466:	00 00       	nop
     468:	c3 e1       	ldi	r28, 0x13	; 19
     46a:	d2 e0       	ldi	r29, 0x02	; 2
     46c:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <displayUpdate>
     470:	88 23       	and	r24, r24
     472:	09 f4       	brne	.+2      	; 0x476 <main+0x26>
     474:	72 c0       	rjmp	.+228    	; 0x55a <main+0x10a>
     476:	00 e0       	ldi	r16, 0x00	; 0
     478:	10 e0       	ldi	r17, 0x00	; 0
     47a:	27 ed       	ldi	r18, 0xD7	; 215
     47c:	33 e4       	ldi	r19, 0x43	; 67
     47e:	40 e0       	ldi	r20, 0x00	; 0
     480:	50 e0       	ldi	r21, 0x00	; 0
     482:	68 ec       	ldi	r22, 0xC8	; 200
     484:	72 e4       	ldi	r23, 0x42	; 66
     486:	8d e5       	ldi	r24, 0x5D	; 93
     488:	92 e0       	ldi	r25, 0x02	; 2
     48a:	19 d2       	rcall	.+1074   	; 0x8be <_ZN17Adafruit_MAX3186511temperatureEff>
     48c:	60 93 59 02 	sts	0x0259, r22	; 0x800259 <skin_temperature>
     490:	70 93 5a 02 	sts	0x025A, r23	; 0x80025a <skin_temperature+0x1>
     494:	80 93 5b 02 	sts	0x025B, r24	; 0x80025b <skin_temperature+0x2>
     498:	90 93 5c 02 	sts	0x025C, r25	; 0x80025c <skin_temperature+0x3>
     49c:	88 81       	ld	r24, Y
     49e:	88 23       	and	r24, r24
     4a0:	69 f1       	breq	.+90     	; 0x4fc <main+0xac>
     4a2:	40 91 59 02 	lds	r20, 0x0259	; 0x800259 <skin_temperature>
     4a6:	50 91 5a 02 	lds	r21, 0x025A	; 0x80025a <skin_temperature+0x1>
     4aa:	60 91 5b 02 	lds	r22, 0x025B	; 0x80025b <skin_temperature+0x2>
     4ae:	70 91 5c 02 	lds	r23, 0x025C	; 0x80025c <skin_temperature+0x3>
     4b2:	ce 01       	movw	r24, r28
     4b4:	3c d3       	rcall	.+1656   	; 0xb2e <_ZN3PID11Compute_PIDEf>
     4b6:	60 93 0f 02 	sts	0x020F, r22	; 0x80020f <Firing_Angle>
     4ba:	70 93 10 02 	sts	0x0210, r23	; 0x800210 <Firing_Angle+0x1>
     4be:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <Firing_Angle+0x2>
     4c2:	90 93 12 02 	sts	0x0212, r25	; 0x800212 <Firing_Angle+0x3>
     4c6:	60 91 0f 02 	lds	r22, 0x020F	; 0x80020f <Firing_Angle>
     4ca:	70 91 10 02 	lds	r23, 0x0210	; 0x800210 <Firing_Angle+0x1>
     4ce:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <Firing_Angle+0x2>
     4d2:	90 91 12 02 	lds	r25, 0x0212	; 0x800212 <Firing_Angle+0x3>
     4d6:	4d d5       	rcall	.+2714   	; 0xf72 <__fixsfsi>
     4d8:	cb 01       	movw	r24, r22
     4da:	31 d4       	rcall	.+2146   	; 0xd3e <_Z17UART0TransmitDatai>
     4dc:	88 e0       	ldi	r24, 0x08	; 8
     4de:	92 e0       	ldi	r25, 0x02	; 2
     4e0:	56 d4       	rcall	.+2220   	; 0xd8e <_Z19UART0TransmitStringPKc>
     4e2:	60 91 59 02 	lds	r22, 0x0259	; 0x800259 <skin_temperature>
     4e6:	70 91 5a 02 	lds	r23, 0x025A	; 0x80025a <skin_temperature+0x1>
     4ea:	80 91 5b 02 	lds	r24, 0x025B	; 0x80025b <skin_temperature+0x2>
     4ee:	90 91 5c 02 	lds	r25, 0x025C	; 0x80025c <skin_temperature+0x3>
     4f2:	5b d4       	rcall	.+2230   	; 0xdaa <_Z18UART0TransmitFloatf>
     4f4:	88 e0       	ldi	r24, 0x08	; 8
     4f6:	92 e0       	ldi	r25, 0x02	; 2
     4f8:	4a d4       	rcall	.+2196   	; 0xd8e <_Z19UART0TransmitStringPKc>
     4fa:	18 82       	st	Y, r1
     4fc:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <Trigger_FLAG>
     500:	88 23       	and	r24, r24
     502:	41 f1       	breq	.+80     	; 0x554 <main+0x104>
     504:	60 91 0f 02 	lds	r22, 0x020F	; 0x80020f <Firing_Angle>
     508:	70 91 10 02 	lds	r23, 0x0210	; 0x800210 <Firing_Angle+0x1>
     50c:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <Firing_Angle+0x2>
     510:	90 91 12 02 	lds	r25, 0x0212	; 0x800212 <Firing_Angle+0x3>
     514:	2e d5       	rcall	.+2652   	; 0xf72 <__fixsfsi>
     516:	8e e0       	ldi	r24, 0x0E	; 14
     518:	92 e0       	ldi	r25, 0x02	; 2
     51a:	b3 d3       	rcall	.+1894   	; 0xc82 <_ZN3PWM11SetOcrValueEi>
     51c:	c0 90 0f 02 	lds	r12, 0x020F	; 0x80020f <Firing_Angle>
     520:	d0 90 10 02 	lds	r13, 0x0210	; 0x800210 <Firing_Angle+0x1>
     524:	e0 90 11 02 	lds	r14, 0x0211	; 0x800211 <Firing_Angle+0x2>
     528:	f0 90 12 02 	lds	r15, 0x0212	; 0x800212 <Firing_Angle+0x3>
     52c:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <FIRING_DELAY>
     530:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <FIRING_DELAY+0x1>
     534:	07 2e       	mov	r0, r23
     536:	00 0c       	add	r0, r0
     538:	88 0b       	sbc	r24, r24
     53a:	99 0b       	sbc	r25, r25
     53c:	4d d5       	rcall	.+2714   	; 0xfd8 <__floatsisf>
     53e:	a7 01       	movw	r20, r14
     540:	96 01       	movw	r18, r12
     542:	46 d4       	rcall	.+2188   	; 0xdd0 <__subsf3>
     544:	16 d5       	rcall	.+2604   	; 0xf72 <__fixsfsi>
     546:	cb 01       	movw	r24, r22
     548:	fa d3       	rcall	.+2036   	; 0xd3e <_Z17UART0TransmitDatai>
     54a:	8a e0       	ldi	r24, 0x0A	; 10
     54c:	92 e0       	ldi	r25, 0x02	; 2
     54e:	1f d4       	rcall	.+2110   	; 0xd8e <_Z19UART0TransmitStringPKc>
     550:	10 92 6a 02 	sts	0x026A, r1	; 0x80026a <Trigger_FLAG>
     554:	10 92 64 02 	sts	0x0264, r1	; 0x800264 <displayUpdate>
     558:	89 cf       	rjmp	.-238    	; 0x46c <main+0x1c>
     55a:	00 00       	nop
     55c:	87 cf       	rjmp	.-242    	; 0x46c <main+0x1c>

0000055e <__vector_13>:
//*******************************************************************************************************************************************************************//

//Display Update and spiTimer

ISR(TIMER2_COMPA_vect)
{
     55e:	1f 92       	push	r1
     560:	0f 92       	push	r0
     562:	0f b6       	in	r0, 0x3f	; 63
     564:	0f 92       	push	r0
     566:	11 24       	eor	r1, r1
     568:	2f 93       	push	r18
     56a:	3f 93       	push	r19
     56c:	8f 93       	push	r24
     56e:	9f 93       	push	r25
	TCNT2 = 0;
     570:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7000b2>
	spiTimerCheck++;
     574:	80 91 63 02 	lds	r24, 0x0263	; 0x800263 <spiTimerCheck>
     578:	8f 5f       	subi	r24, 0xFF	; 255
     57a:	80 93 63 02 	sts	0x0263, r24	; 0x800263 <spiTimerCheck>
	if(startMonitor) {
     57e:	80 91 69 02 	lds	r24, 0x0269	; 0x800269 <startMonitor>
     582:	88 23       	and	r24, r24
     584:	49 f0       	breq	.+18     	; 0x598 <__vector_13+0x3a>
		second++;
     586:	80 91 67 02 	lds	r24, 0x0267	; 0x800267 <second>
     58a:	90 91 68 02 	lds	r25, 0x0268	; 0x800268 <second+0x1>
     58e:	01 96       	adiw	r24, 0x01	; 1
     590:	90 93 68 02 	sts	0x0268, r25	; 0x800268 <second+0x1>
     594:	80 93 67 02 	sts	0x0267, r24	; 0x800267 <second>
	}
	display_count++;
     598:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <display_count>
     59c:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <display_count+0x1>
     5a0:	01 96       	adiw	r24, 0x01	; 1
     5a2:	90 93 58 02 	sts	0x0258, r25	; 0x800258 <display_count+0x1>
     5a6:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <display_count>
	if(display_count >= display_count_max) {
     5aa:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <display_count>
     5ae:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <display_count+0x1>
     5b2:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     5b6:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
     5ba:	28 17       	cp	r18, r24
     5bc:	39 07       	cpc	r19, r25
     5be:	3c f0       	brlt	.+14     	; 0x5ce <__vector_13+0x70>
		displayUpdate = true;
     5c0:	81 e0       	ldi	r24, 0x01	; 1
     5c2:	80 93 64 02 	sts	0x0264, r24	; 0x800264 <displayUpdate>
		display_count = 0;
     5c6:	10 92 58 02 	sts	0x0258, r1	; 0x800258 <display_count+0x1>
     5ca:	10 92 57 02 	sts	0x0257, r1	; 0x800257 <display_count>
	}
}
     5ce:	9f 91       	pop	r25
     5d0:	8f 91       	pop	r24
     5d2:	3f 91       	pop	r19
     5d4:	2f 91       	pop	r18
     5d6:	0f 90       	pop	r0
     5d8:	0f be       	out	0x3f, r0	; 63
     5da:	0f 90       	pop	r0
     5dc:	1f 90       	pop	r1
     5de:	18 95       	reti

000005e0 <__vector_32>:

//ISR For PID Computation
ISR(TIMER3_COMPA_vect)
{
     5e0:	1f 92       	push	r1
     5e2:	0f 92       	push	r0
     5e4:	0f b6       	in	r0, 0x3f	; 63
     5e6:	0f 92       	push	r0
     5e8:	11 24       	eor	r1, r1
     5ea:	8f 93       	push	r24
	Firing_PID.PID_Flag = true;
     5ec:	81 e0       	ldi	r24, 0x01	; 1
     5ee:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <Firing_PID>
}
     5f2:	8f 91       	pop	r24
     5f4:	0f 90       	pop	r0
     5f6:	0f be       	out	0x3f, r0	; 63
     5f8:	0f 90       	pop	r0
     5fa:	1f 90       	pop	r1
     5fc:	18 95       	reti

000005fe <__vector_5>:

//Zero Crossing Detection ISR
ISR(External_Interrupt_vect4)
{
     5fe:	1f 92       	push	r1
     600:	0f 92       	push	r0
     602:	0f b6       	in	r0, 0x3f	; 63
     604:	0f 92       	push	r0
     606:	11 24       	eor	r1, r1
     608:	8f 93       	push	r24
	Trigger_FLAG = true;
     60a:	81 e0       	ldi	r24, 0x01	; 1
     60c:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <Trigger_FLAG>
}
     610:	8f 91       	pop	r24
     612:	0f 90       	pop	r0
     614:	0f be       	out	0x3f, r0	; 63
     616:	0f 90       	pop	r0
     618:	1f 90       	pop	r1
     61a:	18 95       	reti

0000061c <_GLOBAL__sub_I__Z31Initialize_External_Interrupt_4v>:

#define FIRSTINITIALIZE 0
#define REINITIALIZE	1


class max7219 {
     61c:	10 92 52 02 	sts	0x0252, r1	; 0x800252 <max1+0x1>
     620:	10 92 51 02 	sts	0x0251, r1	; 0x800251 <max1>
     624:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <max2+0x1>
     628:	10 92 4b 02 	sts	0x024B, r1	; 0x80024b <max2>
#define  PID_TIFR       TIFR3
#define  PID_TOV        TOV3
#define  PID_OCR        OCR3B


class PID
     62c:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <Firing_PID+0x25>
     630:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <Firing_PID+0x26>
     634:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <Firing_PID+0x27>
     638:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <Firing_PID+0x28>
     63c:	08 95       	ret

0000063e <_ZN17Adafruit_MAX318657spixferEh>:
}


uint8_t Adafruit_MAX31865::readFault(void) {
	return readRegister8(MAX31856_FAULTSTAT_REG);
}
     63e:	6e bd       	out	0x2e, r22	; 46
     640:	0d b4       	in	r0, 0x2d	; 45
     642:	07 fe       	sbrs	r0, 7
     644:	fd cf       	rjmp	.-6      	; 0x640 <_ZN17Adafruit_MAX318657spixferEh+0x2>
     646:	8e b5       	in	r24, 0x2e	; 46
     648:	08 95       	ret

0000064a <_ZN17Adafruit_MAX3186513readRegisterNEhPhh>:
     64a:	ef 92       	push	r14
     64c:	ff 92       	push	r15
     64e:	0f 93       	push	r16
     650:	1f 93       	push	r17
     652:	cf 93       	push	r28
     654:	df 93       	push	r29
     656:	7c 01       	movw	r14, r24
     658:	ea 01       	movw	r28, r20
     65a:	12 2f       	mov	r17, r18
     65c:	fc 01       	movw	r30, r24
     65e:	80 81       	ld	r24, Z
     660:	88 23       	and	r24, r24
     662:	19 f0       	breq	.+6      	; 0x66a <_ZN17Adafruit_MAX3186513readRegisterNEhPhh+0x20>
     664:	81 30       	cpi	r24, 0x01	; 1
     666:	51 f0       	breq	.+20     	; 0x67c <_ZN17Adafruit_MAX3186513readRegisterNEhPhh+0x32>
     668:	11 c0       	rjmp	.+34     	; 0x68c <_ZN17Adafruit_MAX3186513readRegisterNEhPhh+0x42>
     66a:	eb e0       	ldi	r30, 0x0B	; 11
     66c:	f1 e0       	ldi	r31, 0x01	; 1
     66e:	80 81       	ld	r24, Z
     670:	8e 7f       	andi	r24, 0xFE	; 254
     672:	80 83       	st	Z, r24
     674:	80 81       	ld	r24, Z
     676:	84 60       	ori	r24, 0x04	; 4
     678:	80 83       	st	Z, r24
     67a:	08 c0       	rjmp	.+16     	; 0x68c <_ZN17Adafruit_MAX3186513readRegisterNEhPhh+0x42>
     67c:	eb e0       	ldi	r30, 0x0B	; 11
     67e:	f1 e0       	ldi	r31, 0x01	; 1
     680:	80 81       	ld	r24, Z
     682:	8b 7f       	andi	r24, 0xFB	; 251
     684:	80 83       	st	Z, r24
     686:	80 81       	ld	r24, Z
     688:	81 60       	ori	r24, 0x01	; 1
     68a:	80 83       	st	Z, r24
     68c:	6f 77       	andi	r22, 0x7F	; 127
     68e:	c7 01       	movw	r24, r14
     690:	d6 df       	rcall	.-84     	; 0x63e <_ZN17Adafruit_MAX318657spixferEh>
     692:	0f ef       	ldi	r16, 0xFF	; 255
     694:	01 0f       	add	r16, r17
     696:	11 23       	and	r17, r17
     698:	61 f0       	breq	.+24     	; 0x6b2 <_ZN17Adafruit_MAX3186513readRegisterNEhPhh+0x68>
     69a:	10 e0       	ldi	r17, 0x00	; 0
     69c:	0f 5f       	subi	r16, 0xFF	; 255
     69e:	1f 4f       	sbci	r17, 0xFF	; 255
     6a0:	0c 0f       	add	r16, r28
     6a2:	1d 1f       	adc	r17, r29
     6a4:	6f ef       	ldi	r22, 0xFF	; 255
     6a6:	c7 01       	movw	r24, r14
     6a8:	ca df       	rcall	.-108    	; 0x63e <_ZN17Adafruit_MAX318657spixferEh>
     6aa:	89 93       	st	Y+, r24
     6ac:	c0 17       	cp	r28, r16
     6ae:	d1 07       	cpc	r29, r17
     6b0:	c9 f7       	brne	.-14     	; 0x6a4 <_ZN17Adafruit_MAX3186513readRegisterNEhPhh+0x5a>
     6b2:	f7 01       	movw	r30, r14
     6b4:	80 81       	ld	r24, Z
     6b6:	88 23       	and	r24, r24
     6b8:	19 f0       	breq	.+6      	; 0x6c0 <_ZN17Adafruit_MAX3186513readRegisterNEhPhh+0x76>
     6ba:	81 30       	cpi	r24, 0x01	; 1
     6bc:	39 f0       	breq	.+14     	; 0x6cc <_ZN17Adafruit_MAX3186513readRegisterNEhPhh+0x82>
     6be:	0b c0       	rjmp	.+22     	; 0x6d6 <_ZN17Adafruit_MAX3186513readRegisterNEhPhh+0x8c>
     6c0:	eb e0       	ldi	r30, 0x0B	; 11
     6c2:	f1 e0       	ldi	r31, 0x01	; 1
     6c4:	80 81       	ld	r24, Z
     6c6:	81 60       	ori	r24, 0x01	; 1
     6c8:	80 83       	st	Z, r24
     6ca:	05 c0       	rjmp	.+10     	; 0x6d6 <_ZN17Adafruit_MAX3186513readRegisterNEhPhh+0x8c>
     6cc:	eb e0       	ldi	r30, 0x0B	; 11
     6ce:	f1 e0       	ldi	r31, 0x01	; 1
     6d0:	80 81       	ld	r24, Z
     6d2:	84 60       	ori	r24, 0x04	; 4
     6d4:	80 83       	st	Z, r24
     6d6:	df 91       	pop	r29
     6d8:	cf 91       	pop	r28
     6da:	1f 91       	pop	r17
     6dc:	0f 91       	pop	r16
     6de:	ff 90       	pop	r15
     6e0:	ef 90       	pop	r14
     6e2:	08 95       	ret

000006e4 <_ZN17Adafruit_MAX3186513readRegister8Eh>:
     6e4:	cf 93       	push	r28
     6e6:	df 93       	push	r29
     6e8:	1f 92       	push	r1
     6ea:	cd b7       	in	r28, 0x3d	; 61
     6ec:	de b7       	in	r29, 0x3e	; 62
     6ee:	19 82       	std	Y+1, r1	; 0x01
     6f0:	21 e0       	ldi	r18, 0x01	; 1
     6f2:	ae 01       	movw	r20, r28
     6f4:	4f 5f       	subi	r20, 0xFF	; 255
     6f6:	5f 4f       	sbci	r21, 0xFF	; 255
     6f8:	a8 df       	rcall	.-176    	; 0x64a <_ZN17Adafruit_MAX3186513readRegisterNEhPhh>
     6fa:	89 81       	ldd	r24, Y+1	; 0x01
     6fc:	0f 90       	pop	r0
     6fe:	df 91       	pop	r29
     700:	cf 91       	pop	r28
     702:	08 95       	ret

00000704 <_ZN17Adafruit_MAX3186514readRegister16Eh>:
	readRegisterN(addr, &ret, 1);
	
	return ret;
}

uint16_t Adafruit_MAX31865::readRegister16(uint8_t addr) {
     704:	cf 93       	push	r28
     706:	df 93       	push	r29
     708:	1f 92       	push	r1
     70a:	1f 92       	push	r1
     70c:	cd b7       	in	r28, 0x3d	; 61
     70e:	de b7       	in	r29, 0x3e	; 62
uint8_t buffer[2] = {0, 0};
     710:	19 82       	std	Y+1, r1	; 0x01
     712:	1a 82       	std	Y+2, r1	; 0x02
readRegisterN(addr, buffer, 2);
     714:	22 e0       	ldi	r18, 0x02	; 2
     716:	ae 01       	movw	r20, r28
     718:	4f 5f       	subi	r20, 0xFF	; 255
     71a:	5f 4f       	sbci	r21, 0xFF	; 255
     71c:	96 df       	rcall	.-212    	; 0x64a <_ZN17Adafruit_MAX3186513readRegisterNEhPhh>

uint16_t ret = buffer[0];
     71e:	89 81       	ldd	r24, Y+1	; 0x01
     720:	90 e0       	ldi	r25, 0x00	; 0
ret <<= 8;
     722:	98 2f       	mov	r25, r24
     724:	88 27       	eor	r24, r24
ret |=  buffer[1];
     726:	2a 81       	ldd	r18, Y+2	; 0x02

return ret;
}
     728:	82 2b       	or	r24, r18
     72a:	0f 90       	pop	r0
     72c:	0f 90       	pop	r0
     72e:	df 91       	pop	r29
     730:	cf 91       	pop	r28
     732:	08 95       	ret

00000734 <_ZN17Adafruit_MAX3186514writeRegister8Ehh>:

 
}


void Adafruit_MAX31865::writeRegister8(uint8_t addr, uint8_t data) {
     734:	1f 93       	push	r17
     736:	cf 93       	push	r28
     738:	df 93       	push	r29
     73a:	ec 01       	movw	r28, r24
     73c:	14 2f       	mov	r17, r20
 
  switch(choose) {
     73e:	88 81       	ld	r24, Y
     740:	88 23       	and	r24, r24
     742:	19 f0       	breq	.+6      	; 0x74a <_ZN17Adafruit_MAX3186514writeRegister8Ehh+0x16>
     744:	81 30       	cpi	r24, 0x01	; 1
     746:	51 f0       	breq	.+20     	; 0x75c <_ZN17Adafruit_MAX3186514writeRegister8Ehh+0x28>
     748:	11 c0       	rjmp	.+34     	; 0x76c <_ZN17Adafruit_MAX3186514writeRegister8Ehh+0x38>
	  case 0:
		TEMP_I_PORT &=~ (1 << TEMP_I_PIN);
     74a:	eb e0       	ldi	r30, 0x0B	; 11
     74c:	f1 e0       	ldi	r31, 0x01	; 1
     74e:	80 81       	ld	r24, Z
     750:	8e 7f       	andi	r24, 0xFE	; 254
     752:	80 83       	st	Z, r24
		TEMP_II_PORT |= (1 << TEMP_II_PIN);
     754:	80 81       	ld	r24, Z
     756:	84 60       	ori	r24, 0x04	; 4
     758:	80 83       	st	Z, r24
		break;
     75a:	08 c0       	rjmp	.+16     	; 0x76c <_ZN17Adafruit_MAX3186514writeRegister8Ehh+0x38>
	  case 1:
		TEMP_II_PORT &=~ (1 << TEMP_II_PIN);
     75c:	eb e0       	ldi	r30, 0x0B	; 11
     75e:	f1 e0       	ldi	r31, 0x01	; 1
     760:	80 81       	ld	r24, Z
     762:	8b 7f       	andi	r24, 0xFB	; 251
     764:	80 83       	st	Z, r24
		TEMP_I_PORT |= (1 << TEMP_I_PIN);
     766:	80 81       	ld	r24, Z
     768:	81 60       	ori	r24, 0x01	; 1
     76a:	80 83       	st	Z, r24
		break;
  }
  spixfer(addr | 0x80);   // make sure top bit is set
     76c:	60 68       	ori	r22, 0x80	; 128
     76e:	ce 01       	movw	r24, r28
     770:	66 df       	rcall	.-308    	; 0x63e <_ZN17Adafruit_MAX318657spixferEh>
  spixfer(data);
     772:	61 2f       	mov	r22, r17
     774:	ce 01       	movw	r24, r28
     776:	63 df       	rcall	.-314    	; 0x63e <_ZN17Adafruit_MAX318657spixferEh>

  //Serial.print("$"); Serial.print(addr, HEX); Serial.print(" = 0x"); Serial.println(data, HEX);

switch(choose) {
     778:	88 81       	ld	r24, Y
     77a:	88 23       	and	r24, r24
     77c:	19 f0       	breq	.+6      	; 0x784 <_ZN17Adafruit_MAX3186514writeRegister8Ehh+0x50>
     77e:	81 30       	cpi	r24, 0x01	; 1
     780:	39 f0       	breq	.+14     	; 0x790 <_ZN17Adafruit_MAX3186514writeRegister8Ehh+0x5c>
     782:	0b c0       	rjmp	.+22     	; 0x79a <_ZN17Adafruit_MAX3186514writeRegister8Ehh+0x66>
   case 0:
	TEMP_I_PORT |= (1 << TEMP_I_PIN);
     784:	eb e0       	ldi	r30, 0x0B	; 11
     786:	f1 e0       	ldi	r31, 0x01	; 1
     788:	80 81       	ld	r24, Z
     78a:	81 60       	ori	r24, 0x01	; 1
     78c:	80 83       	st	Z, r24
	break;
     78e:	05 c0       	rjmp	.+10     	; 0x79a <_ZN17Adafruit_MAX3186514writeRegister8Ehh+0x66>
  case 1:
	TEMP_II_PORT |= (1 << TEMP_II_PIN);
     790:	eb e0       	ldi	r30, 0x0B	; 11
     792:	f1 e0       	ldi	r31, 0x01	; 1
     794:	80 81       	ld	r24, Z
     796:	84 60       	ori	r24, 0x04	; 4
     798:	80 83       	st	Z, r24
	break;
}
}
     79a:	df 91       	pop	r29
     79c:	cf 91       	pop	r28
     79e:	1f 91       	pop	r17
     7a0:	08 95       	ret

000007a2 <_ZN17Adafruit_MAX3186510clearFaultEv>:

uint8_t Adafruit_MAX31865::readFault(void) {
	return readRegister8(MAX31856_FAULTSTAT_REG);
}

void Adafruit_MAX31865::clearFault(void) {
     7a2:	cf 93       	push	r28
     7a4:	df 93       	push	r29
     7a6:	ec 01       	movw	r28, r24
	uint8_t t = readRegister8(MAX31856_CONFIG_REG);
     7a8:	60 e0       	ldi	r22, 0x00	; 0
     7aa:	9c df       	rcall	.-200    	; 0x6e4 <_ZN17Adafruit_MAX3186513readRegister8Eh>
	t &= ~0x2C;
     7ac:	83 7d       	andi	r24, 0xD3	; 211
	t |= MAX31856_CONFIG_FAULTSTAT;
	writeRegister8(MAX31856_CONFIG_REG, t);
     7ae:	48 2f       	mov	r20, r24
     7b0:	42 60       	ori	r20, 0x02	; 2
     7b2:	60 e0       	ldi	r22, 0x00	; 0
     7b4:	ce 01       	movw	r24, r28
     7b6:	be df       	rcall	.-132    	; 0x734 <_ZN17Adafruit_MAX3186514writeRegister8Ehh>
}
     7b8:	df 91       	pop	r29
     7ba:	cf 91       	pop	r28
     7bc:	08 95       	ret

000007be <_ZN17Adafruit_MAX3186510enableBiasEb>:

void Adafruit_MAX31865::enableBias(bool b) {
     7be:	1f 93       	push	r17
     7c0:	cf 93       	push	r28
     7c2:	df 93       	push	r29
     7c4:	ec 01       	movw	r28, r24
     7c6:	16 2f       	mov	r17, r22
	uint8_t t = readRegister8(MAX31856_CONFIG_REG);
     7c8:	60 e0       	ldi	r22, 0x00	; 0
     7ca:	8c df       	rcall	.-232    	; 0x6e4 <_ZN17Adafruit_MAX3186513readRegister8Eh>
	if (b) {
     7cc:	11 23       	and	r17, r17
     7ce:	19 f0       	breq	.+6      	; 0x7d6 <_ZN17Adafruit_MAX3186510enableBiasEb+0x18>
		t |= MAX31856_CONFIG_BIAS;       // enable bias
     7d0:	48 2f       	mov	r20, r24
     7d2:	40 68       	ori	r20, 0x80	; 128
     7d4:	02 c0       	rjmp	.+4      	; 0x7da <_ZN17Adafruit_MAX3186510enableBiasEb+0x1c>
	} else {
		t &= ~MAX31856_CONFIG_BIAS;       // disable bias
     7d6:	48 2f       	mov	r20, r24
     7d8:	4f 77       	andi	r20, 0x7F	; 127
	}
	writeRegister8(MAX31856_CONFIG_REG, t);
     7da:	60 e0       	ldi	r22, 0x00	; 0
     7dc:	ce 01       	movw	r24, r28
     7de:	aa df       	rcall	.-172    	; 0x734 <_ZN17Adafruit_MAX3186514writeRegister8Ehh>
}
     7e0:	df 91       	pop	r29
     7e2:	cf 91       	pop	r28
     7e4:	1f 91       	pop	r17
     7e6:	08 95       	ret

000007e8 <_ZN17Adafruit_MAX3186511autoConvertEb>:

void Adafruit_MAX31865::autoConvert(bool b) {
     7e8:	1f 93       	push	r17
     7ea:	cf 93       	push	r28
     7ec:	df 93       	push	r29
     7ee:	ec 01       	movw	r28, r24
     7f0:	16 2f       	mov	r17, r22
	uint8_t t = readRegister8(MAX31856_CONFIG_REG);
     7f2:	60 e0       	ldi	r22, 0x00	; 0
     7f4:	77 df       	rcall	.-274    	; 0x6e4 <_ZN17Adafruit_MAX3186513readRegister8Eh>
	if (b) {
     7f6:	11 23       	and	r17, r17
     7f8:	19 f0       	breq	.+6      	; 0x800 <_ZN17Adafruit_MAX3186511autoConvertEb+0x18>
		t |= MAX31856_CONFIG_MODEAUTO;       // enable autoconvert
     7fa:	48 2f       	mov	r20, r24
     7fc:	40 64       	ori	r20, 0x40	; 64
     7fe:	02 c0       	rjmp	.+4      	; 0x804 <_ZN17Adafruit_MAX3186511autoConvertEb+0x1c>
	} else {
		t &= ~MAX31856_CONFIG_MODEAUTO;       // disable autoconvert
     800:	48 2f       	mov	r20, r24
     802:	4f 7b       	andi	r20, 0xBF	; 191
	}
	writeRegister8(MAX31856_CONFIG_REG, t);
     804:	60 e0       	ldi	r22, 0x00	; 0
     806:	ce 01       	movw	r24, r28
     808:	95 df       	rcall	.-214    	; 0x734 <_ZN17Adafruit_MAX3186514writeRegister8Ehh>
}
     80a:	df 91       	pop	r29
     80c:	cf 91       	pop	r28
     80e:	1f 91       	pop	r17
     810:	08 95       	ret

00000812 <_ZN17Adafruit_MAX318658setWiresE17max31865_numwires>:

void Adafruit_MAX31865::setWires(max31865_numwires_t wires ) {
     812:	1f 93       	push	r17
     814:	cf 93       	push	r28
     816:	df 93       	push	r29
     818:	ec 01       	movw	r28, r24
     81a:	16 2f       	mov	r17, r22
	uint8_t t = readRegister8(MAX31856_CONFIG_REG);
     81c:	60 e0       	ldi	r22, 0x00	; 0
     81e:	62 df       	rcall	.-316    	; 0x6e4 <_ZN17Adafruit_MAX3186513readRegister8Eh>
	if (wires == MAX31865_3WIRE) {
     820:	11 30       	cpi	r17, 0x01	; 1
     822:	19 f4       	brne	.+6      	; 0x82a <_ZN17Adafruit_MAX318658setWiresE17max31865_numwires+0x18>
		t |= MAX31856_CONFIG_3WIRE;
     824:	48 2f       	mov	r20, r24
     826:	40 61       	ori	r20, 0x10	; 16
     828:	02 c0       	rjmp	.+4      	; 0x82e <_ZN17Adafruit_MAX318658setWiresE17max31865_numwires+0x1c>
	} else {
		// 2 or 4 wire
		t &= ~MAX31856_CONFIG_3WIRE;
     82a:	48 2f       	mov	r20, r24
     82c:	4f 7e       	andi	r20, 0xEF	; 239
	}
	writeRegister8(MAX31856_CONFIG_REG, t);
     82e:	60 e0       	ldi	r22, 0x00	; 0
     830:	ce 01       	movw	r24, r28
     832:	80 df       	rcall	.-256    	; 0x734 <_ZN17Adafruit_MAX3186514writeRegister8Ehh>
}
     834:	df 91       	pop	r29
     836:	cf 91       	pop	r28
     838:	1f 91       	pop	r17
     83a:	08 95       	ret

0000083c <_ZN17Adafruit_MAX318655beginEh>:
#include <stdlib.h>
#include "header.h"
#include <util/delay.h>


bool Adafruit_MAX31865::begin(uint8_t choose1) {
     83c:	1f 93       	push	r17
     83e:	cf 93       	push	r28
     840:	df 93       	push	r29
     842:	ec 01       	movw	r28, r24
     844:	16 2f       	mov	r17, r22
	
	DISPLAY_I_PORT |= (1 << DISPLAY_I_PIN) | (1 << DISPLAY_II_PIN);
     846:	e8 e0       	ldi	r30, 0x08	; 8
     848:	f1 e0       	ldi	r31, 0x01	; 1
     84a:	80 81       	ld	r24, Z
     84c:	80 6c       	ori	r24, 0xC0	; 192
     84e:	80 83       	st	Z, r24
	SPI.begin();
     850:	23 d2       	rcall	.+1094   	; 0xc98 <_ZN8SPIClass5beginEv>
  static void begin();
  // Before using SPI.transfer() or asserting chip select pins,
  // this function is used to gain exclusive access to the SPI bus
  // and configure the correct settings.
  inline static void beginTransaction(SPISettings settings) {
    SPCR = settings.spcr;
     852:	85 e5       	ldi	r24, 0x55	; 85
     854:	8c bd       	out	0x2c, r24	; 44
	SPI.beginTransaction(SPISettings(1000000,MSBFIRST,SPI_MODE1));
	for (uint8_t i=0; i<16; i++) {
		// readRegister8(i);
	}
	choose = choose1;
     856:	18 83       	st	Y, r17
	setWires(MAX31865_3WIRE);
     858:	61 e0       	ldi	r22, 0x01	; 1
     85a:	ce 01       	movw	r24, r28
     85c:	da df       	rcall	.-76     	; 0x812 <_ZN17Adafruit_MAX318658setWiresE17max31865_numwires>
	enableBias(false);
     85e:	60 e0       	ldi	r22, 0x00	; 0
     860:	ce 01       	movw	r24, r28
     862:	ad df       	rcall	.-166    	; 0x7be <_ZN17Adafruit_MAX3186510enableBiasEb>
	autoConvert(false);
     864:	60 e0       	ldi	r22, 0x00	; 0
     866:	ce 01       	movw	r24, r28
     868:	bf df       	rcall	.-130    	; 0x7e8 <_ZN17Adafruit_MAX3186511autoConvertEb>
	clearFault();
     86a:	ce 01       	movw	r24, r28
     86c:	9a df       	rcall	.-204    	; 0x7a2 <_ZN17Adafruit_MAX3186510clearFaultEv>
     86e:	81 e0       	ldi	r24, 0x01	; 1
	
	//Serial.print("config: "); Serial.println(readRegister8(MAX31856_CONFIG_REG), HEX);
	return true;
}
     870:	df 91       	pop	r29
     872:	cf 91       	pop	r28
     874:	1f 91       	pop	r17
     876:	08 95       	ret

00000878 <_ZN17Adafruit_MAX318657readRTDEv>:
     878:	cf 93       	push	r28
	temp += 1.5243e-10 * rpoly;

	return temp;
}

uint16_t Adafruit_MAX31865::readRTD (void) {
     87a:	df 93       	push	r29
     87c:	ec 01       	movw	r28, r24
	clearFault();
     87e:	91 df       	rcall	.-222    	; 0x7a2 <_ZN17Adafruit_MAX3186510clearFaultEv>
	enableBias(true);
     880:	61 e0       	ldi	r22, 0x01	; 1
     882:	ce 01       	movw	r24, r28
     884:	9c df       	rcall	.-200    	; 0x7be <_ZN17Adafruit_MAX3186510enableBiasEb>
     886:	83 ec       	ldi	r24, 0xC3	; 195
     888:	99 e0       	ldi	r25, 0x09	; 9
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	f1 f7       	brne	.-4      	; 0x88a <_ZN17Adafruit_MAX318657readRTDEv+0x12>
     88e:	00 c0       	rjmp	.+0      	; 0x890 <_ZN17Adafruit_MAX318657readRTDEv+0x18>
     890:	00 00       	nop
	_delay_ms(10);
	uint8_t t = readRegister8(MAX31856_CONFIG_REG);
     892:	60 e0       	ldi	r22, 0x00	; 0
     894:	ce 01       	movw	r24, r28
     896:	26 df       	rcall	.-436    	; 0x6e4 <_ZN17Adafruit_MAX3186513readRegister8Eh>
	t |= MAX31856_CONFIG_1SHOT;
	writeRegister8(MAX31856_CONFIG_REG, t);
     898:	48 2f       	mov	r20, r24
     89a:	40 62       	ori	r20, 0x20	; 32
     89c:	60 e0       	ldi	r22, 0x00	; 0
     89e:	ce 01       	movw	r24, r28
     8a0:	49 df       	rcall	.-366    	; 0x734 <_ZN17Adafruit_MAX3186514writeRegister8Ehh>
     8a2:	89 e7       	ldi	r24, 0x79	; 121
     8a4:	9f e3       	ldi	r25, 0x3F	; 63
     8a6:	01 97       	sbiw	r24, 0x01	; 1
     8a8:	f1 f7       	brne	.-4      	; 0x8a6 <_ZN17Adafruit_MAX318657readRTDEv+0x2e>
     8aa:	00 c0       	rjmp	.+0      	; 0x8ac <_ZN17Adafruit_MAX318657readRTDEv+0x34>
	_delay_ms(65);

	uint16_t rtd = readRegister16(MAX31856_RTDMSB_REG);
     8ac:	00 00       	nop
     8ae:	61 e0       	ldi	r22, 0x01	; 1
     8b0:	ce 01       	movw	r24, r28
     8b2:	28 df       	rcall	.-432    	; 0x704 <_ZN17Adafruit_MAX3186514readRegister16Eh>

	// remove fault
	rtd >>= 1;

	return rtd;
}
     8b4:	96 95       	lsr	r25
     8b6:	87 95       	ror	r24
     8b8:	df 91       	pop	r29
     8ba:	cf 91       	pop	r28
     8bc:	08 95       	ret

000008be <_ZN17Adafruit_MAX3186511temperatureEff>:
		t &= ~MAX31856_CONFIG_3WIRE;
	}
	writeRegister8(MAX31856_CONFIG_REG, t);
}

float  Adafruit_MAX31865::temperature(float RTDnominal, float refResistor) {
     8be:	4f 92       	push	r4
     8c0:	5f 92       	push	r5
     8c2:	6f 92       	push	r6
     8c4:	7f 92       	push	r7
     8c6:	8f 92       	push	r8
     8c8:	9f 92       	push	r9
     8ca:	af 92       	push	r10
     8cc:	bf 92       	push	r11
     8ce:	cf 92       	push	r12
     8d0:	df 92       	push	r13
     8d2:	ef 92       	push	r14
     8d4:	ff 92       	push	r15
     8d6:	0f 93       	push	r16
     8d8:	1f 93       	push	r17
     8da:	cf 93       	push	r28
     8dc:	df 93       	push	r29
     8de:	6a 01       	movw	r12, r20
     8e0:	7b 01       	movw	r14, r22
     8e2:	48 01       	movw	r8, r16
     8e4:	59 01       	movw	r10, r18
	// http://www.analog.com/media/en/technical-documentation/application-notes/AN709_0.pdf

	float Z1, Z2, Z3, Z4, Rt, temp;

	Rt = readRTD();
     8e6:	c8 df       	rcall	.-112    	; 0x878 <_ZN17Adafruit_MAX318657readRTDEv>
     8e8:	bc 01       	movw	r22, r24
     8ea:	80 e0       	ldi	r24, 0x00	; 0
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	72 d3       	rcall	.+1764   	; 0xfd4 <__floatunsisf>
	Rt /= 32768;
     8f0:	20 e0       	ldi	r18, 0x00	; 0
     8f2:	30 e0       	ldi	r19, 0x00	; 0
     8f4:	40 e0       	ldi	r20, 0x00	; 0
     8f6:	58 e3       	ldi	r21, 0x38	; 56
     8f8:	23 d4       	rcall	.+2118   	; 0x1140 <__mulsf3>
	Rt *= refResistor;
     8fa:	a5 01       	movw	r20, r10
     8fc:	94 01       	movw	r18, r8
     8fe:	20 d4       	rcall	.+2112   	; 0x1140 <__mulsf3>
     900:	4b 01       	movw	r8, r22
     902:	5c 01       	movw	r10, r24
     904:	a7 01       	movw	r20, r14
	Z2 = RTD_A * RTD_A - (4 * RTD_B);
	Z3 = (4 * RTD_B) / RTDnominal;
	Z4 = 2 * RTD_B;

	temp = Z2 + (Z3 * Rt);
	temp = (sqrt(temp) + Z1) / Z4;
     906:	96 01       	movw	r18, r12
     908:	6f e7       	ldi	r22, 0x7F	; 127
     90a:	75 e0       	ldi	r23, 0x05	; 5
     90c:	8b e1       	ldi	r24, 0x1B	; 27
     90e:	96 eb       	ldi	r25, 0xB6	; 182
     910:	c8 d2       	rcall	.+1424   	; 0xea2 <__divsf3>
     912:	2b 01       	movw	r4, r22
     914:	3c 01       	movw	r6, r24
     916:	a5 01       	movw	r20, r10
     918:	94 01       	movw	r18, r8
     91a:	c3 01       	movw	r24, r6
     91c:	b2 01       	movw	r22, r4
     91e:	10 d4       	rcall	.+2080   	; 0x1140 <__mulsf3>
     920:	26 e1       	ldi	r18, 0x16	; 22
     922:	33 e8       	ldi	r19, 0x83	; 131
     924:	43 e9       	ldi	r20, 0x93	; 147
     926:	57 e3       	ldi	r21, 0x37	; 55
     928:	54 d2       	rcall	.+1192   	; 0xdd2 <__addsf3>
     92a:	71 d4       	rcall	.+2274   	; 0x120e <sqrt>
     92c:	22 e3       	ldi	r18, 0x32	; 50
     92e:	31 e1       	ldi	r19, 0x11	; 17
     930:	40 e8       	ldi	r20, 0x80	; 128
     932:	5b e3       	ldi	r21, 0x3B	; 59
     934:	4d d2       	rcall	.+1178   	; 0xdd0 <__subsf3>
     936:	2f e7       	ldi	r18, 0x7F	; 127
     938:	35 e0       	ldi	r19, 0x05	; 5
     93a:	4b e9       	ldi	r20, 0x9B	; 155
     93c:	55 eb       	ldi	r21, 0xB5	; 181
     93e:	b1 d2       	rcall	.+1378   	; 0xea2 <__divsf3>
     940:	06 2f       	mov	r16, r22
     942:	17 2f       	mov	r17, r23
     944:	d8 2f       	mov	r29, r24
     946:	c9 2f       	mov	r28, r25
	
	if (temp >= 0) return temp;
     948:	20 e0       	ldi	r18, 0x00	; 0
     94a:	30 e0       	ldi	r19, 0x00	; 0
     94c:	a9 01       	movw	r20, r18
     94e:	f4 d3       	rcall	.+2024   	; 0x1138 <__gesf2>
     950:	88 23       	and	r24, r24
     952:	0c f0       	brlt	.+2      	; 0x956 <_ZN17Adafruit_MAX3186511temperatureEff+0x98>

	// ugh.
	Rt /= RTDnominal;
	Rt *= 100;      // normalize to 100 ohm
     954:	60 c0       	rjmp	.+192    	; 0xa16 <_ZN17Adafruit_MAX3186511temperatureEff+0x158>
     956:	a7 01       	movw	r20, r14
     958:	96 01       	movw	r18, r12
     95a:	c5 01       	movw	r24, r10
     95c:	b4 01       	movw	r22, r8
     95e:	a1 d2       	rcall	.+1346   	; 0xea2 <__divsf3>
     960:	20 e0       	ldi	r18, 0x00	; 0
     962:	30 e0       	ldi	r19, 0x00	; 0
     964:	48 ec       	ldi	r20, 0xC8	; 200
     966:	52 e4       	ldi	r21, 0x42	; 66
     968:	eb d3       	rcall	.+2006   	; 0x1140 <__mulsf3>
     96a:	6b 01       	movw	r12, r22

	float rpoly = Rt;

	temp = -242.02;
	temp += 2.2228 * rpoly;
     96c:	7c 01       	movw	r14, r24
     96e:	2b e5       	ldi	r18, 0x5B	; 91
     970:	32 e4       	ldi	r19, 0x42	; 66
     972:	4e e0       	ldi	r20, 0x0E	; 14
     974:	50 e4       	ldi	r21, 0x40	; 64
     976:	e4 d3       	rcall	.+1992   	; 0x1140 <__mulsf3>
     978:	2f e1       	ldi	r18, 0x1F	; 31
     97a:	35 e0       	ldi	r19, 0x05	; 5
     97c:	42 e7       	ldi	r20, 0x72	; 114
     97e:	53 e4       	ldi	r21, 0x43	; 67
     980:	27 d2       	rcall	.+1102   	; 0xdd0 <__subsf3>
     982:	2b 01       	movw	r4, r22
	rpoly *= Rt;  // square
     984:	3c 01       	movw	r6, r24
     986:	a7 01       	movw	r20, r14
     988:	96 01       	movw	r18, r12
     98a:	c7 01       	movw	r24, r14
     98c:	b6 01       	movw	r22, r12
     98e:	d8 d3       	rcall	.+1968   	; 0x1140 <__mulsf3>
     990:	4b 01       	movw	r8, r22
	temp += 2.5859e-3 * rpoly;
     992:	5c 01       	movw	r10, r24
     994:	24 e3       	ldi	r18, 0x34	; 52
     996:	38 e7       	ldi	r19, 0x78	; 120
     998:	49 e2       	ldi	r20, 0x29	; 41
     99a:	5b e3       	ldi	r21, 0x3B	; 59
     99c:	d1 d3       	rcall	.+1954   	; 0x1140 <__mulsf3>
     99e:	a3 01       	movw	r20, r6
     9a0:	92 01       	movw	r18, r4
     9a2:	17 d2       	rcall	.+1070   	; 0xdd2 <__addsf3>
     9a4:	2b 01       	movw	r4, r22
	rpoly *= Rt;  // ^3
     9a6:	3c 01       	movw	r6, r24
     9a8:	a5 01       	movw	r20, r10
     9aa:	94 01       	movw	r18, r8
     9ac:	c7 01       	movw	r24, r14
     9ae:	b6 01       	movw	r22, r12
     9b0:	c7 d3       	rcall	.+1934   	; 0x1140 <__mulsf3>
     9b2:	4b 01       	movw	r8, r22
	temp -= 4.8260e-6 * rpoly;
     9b4:	5c 01       	movw	r10, r24
     9b6:	26 e0       	ldi	r18, 0x06	; 6
     9b8:	3f ee       	ldi	r19, 0xEF	; 239
     9ba:	41 ea       	ldi	r20, 0xA1	; 161
     9bc:	56 e3       	ldi	r21, 0x36	; 54
     9be:	c0 d3       	rcall	.+1920   	; 0x1140 <__mulsf3>
     9c0:	9b 01       	movw	r18, r22
     9c2:	ac 01       	movw	r20, r24
     9c4:	c3 01       	movw	r24, r6
     9c6:	b2 01       	movw	r22, r4
     9c8:	03 d2       	rcall	.+1030   	; 0xdd0 <__subsf3>
     9ca:	2b 01       	movw	r4, r22
	rpoly *= Rt;  // ^4
     9cc:	3c 01       	movw	r6, r24
     9ce:	a5 01       	movw	r20, r10
     9d0:	94 01       	movw	r18, r8
     9d2:	c7 01       	movw	r24, r14
     9d4:	b6 01       	movw	r22, r12
     9d6:	b4 d3       	rcall	.+1896   	; 0x1140 <__mulsf3>
     9d8:	4b 01       	movw	r8, r22
	temp -= 2.8183e-8 * rpoly;
     9da:	5c 01       	movw	r10, r24
     9dc:	23 e1       	ldi	r18, 0x13	; 19
     9de:	37 e1       	ldi	r19, 0x17	; 23
     9e0:	42 ef       	ldi	r20, 0xF2	; 242
     9e2:	52 e3       	ldi	r21, 0x32	; 50
     9e4:	ad d3       	rcall	.+1882   	; 0x1140 <__mulsf3>
     9e6:	9b 01       	movw	r18, r22
     9e8:	ac 01       	movw	r20, r24
     9ea:	c3 01       	movw	r24, r6
     9ec:	b2 01       	movw	r22, r4
     9ee:	f0 d1       	rcall	.+992    	; 0xdd0 <__subsf3>
     9f0:	2b 01       	movw	r4, r22
     9f2:	3c 01       	movw	r6, r24
	rpoly *= Rt;  // ^5
	temp += 1.5243e-10 * rpoly;
     9f4:	a5 01       	movw	r20, r10
     9f6:	94 01       	movw	r18, r8
     9f8:	c7 01       	movw	r24, r14
     9fa:	b6 01       	movw	r22, r12
     9fc:	a1 d3       	rcall	.+1858   	; 0x1140 <__mulsf3>
     9fe:	2b e3       	ldi	r18, 0x3B	; 59
     a00:	39 e9       	ldi	r19, 0x99	; 153
     a02:	47 e2       	ldi	r20, 0x27	; 39
     a04:	5f e2       	ldi	r21, 0x2F	; 47
     a06:	9c d3       	rcall	.+1848   	; 0x1140 <__mulsf3>
     a08:	a3 01       	movw	r20, r6
     a0a:	92 01       	movw	r18, r4
     a0c:	e2 d1       	rcall	.+964    	; 0xdd2 <__addsf3>
     a0e:	06 2f       	mov	r16, r22
     a10:	17 2f       	mov	r17, r23
     a12:	d8 2f       	mov	r29, r24

	return temp;
     a14:	c9 2f       	mov	r28, r25
     a16:	60 2f       	mov	r22, r16
     a18:	71 2f       	mov	r23, r17
     a1a:	8d 2f       	mov	r24, r29
}
     a1c:	9c 2f       	mov	r25, r28
     a1e:	df 91       	pop	r29
     a20:	cf 91       	pop	r28
     a22:	1f 91       	pop	r17
     a24:	0f 91       	pop	r16
     a26:	ff 90       	pop	r15
     a28:	ef 90       	pop	r14
     a2a:	df 90       	pop	r13
     a2c:	cf 90       	pop	r12
     a2e:	bf 90       	pop	r11
     a30:	af 90       	pop	r10
     a32:	9f 90       	pop	r9
     a34:	8f 90       	pop	r8
     a36:	7f 90       	pop	r7
     a38:	6f 90       	pop	r6
     a3a:	5f 90       	pop	r5
     a3c:	4f 90       	pop	r4
     a3e:	08 95       	ret

00000a40 <_Z9constrainRfff>:
#include <avr/io.h>
#include <avr/interrupt.h>


void constrain(float &val,float minVal,float maxVal)
{
     a40:	8f 92       	push	r8
     a42:	9f 92       	push	r9
     a44:	af 92       	push	r10
     a46:	bf 92       	push	r11
     a48:	cf 92       	push	r12
     a4a:	df 92       	push	r13
     a4c:	ef 92       	push	r14
     a4e:	ff 92       	push	r15
     a50:	0f 93       	push	r16
     a52:	1f 93       	push	r17
     a54:	cf 93       	push	r28
     a56:	df 93       	push	r29
     a58:	ec 01       	movw	r28, r24
     a5a:	4a 01       	movw	r8, r20
     a5c:	5b 01       	movw	r10, r22
     a5e:	68 01       	movw	r12, r16
     a60:	79 01       	movw	r14, r18
	if(val < minVal)
     a62:	9a 01       	movw	r18, r20
     a64:	ab 01       	movw	r20, r22
     a66:	68 81       	ld	r22, Y
     a68:	79 81       	ldd	r23, Y+1	; 0x01
     a6a:	8a 81       	ldd	r24, Y+2	; 0x02
     a6c:	9b 81       	ldd	r25, Y+3	; 0x03
     a6e:	15 d2       	rcall	.+1066   	; 0xe9a <__cmpsf2>
     a70:	88 23       	and	r24, r24
     a72:	24 f4       	brge	.+8      	; 0xa7c <_Z9constrainRfff+0x3c>
		val = minVal;
     a74:	88 82       	st	Y, r8
     a76:	99 82       	std	Y+1, r9	; 0x01
     a78:	aa 82       	std	Y+2, r10	; 0x02
     a7a:	bb 82       	std	Y+3, r11	; 0x03
	if(val > maxVal)
     a7c:	a7 01       	movw	r20, r14
     a7e:	96 01       	movw	r18, r12
     a80:	68 81       	ld	r22, Y
     a82:	79 81       	ldd	r23, Y+1	; 0x01
     a84:	8a 81       	ldd	r24, Y+2	; 0x02
     a86:	9b 81       	ldd	r25, Y+3	; 0x03
     a88:	57 d3       	rcall	.+1710   	; 0x1138 <__gesf2>
     a8a:	18 16       	cp	r1, r24
     a8c:	24 f4       	brge	.+8      	; 0xa96 <_Z9constrainRfff+0x56>
		val = maxVal;
     a8e:	c8 82       	st	Y, r12
     a90:	d9 82       	std	Y+1, r13	; 0x01
     a92:	ea 82       	std	Y+2, r14	; 0x02
     a94:	fb 82       	std	Y+3, r15	; 0x03
}
     a96:	df 91       	pop	r29
     a98:	cf 91       	pop	r28
     a9a:	1f 91       	pop	r17
     a9c:	0f 91       	pop	r16
     a9e:	ff 90       	pop	r15
     aa0:	ef 90       	pop	r14
     aa2:	df 90       	pop	r13
     aa4:	cf 90       	pop	r12
     aa6:	bf 90       	pop	r11
     aa8:	af 90       	pop	r10
     aaa:	9f 90       	pop	r9
     aac:	8f 90       	pop	r8
     aae:	08 95       	ret

00000ab0 <_ZN3PID10InitializeEv>:

void PID::Initialize()
{
     ab0:	fc 01       	movw	r30, r24
	kp         =  0;
     ab2:	11 82       	std	Z+1, r1	; 0x01
     ab4:	12 82       	std	Z+2, r1	; 0x02
     ab6:	13 82       	std	Z+3, r1	; 0x03
     ab8:	14 82       	std	Z+4, r1	; 0x04
	ki         =  0;
     aba:	15 82       	std	Z+5, r1	; 0x05
     abc:	16 82       	std	Z+6, r1	; 0x06
     abe:	17 82       	std	Z+7, r1	; 0x07
     ac0:	10 86       	std	Z+8, r1	; 0x08
	kd         =  0;
     ac2:	11 86       	std	Z+9, r1	; 0x09
     ac4:	12 86       	std	Z+10, r1	; 0x0a
     ac6:	13 86       	std	Z+11, r1	; 0x0b
     ac8:	14 86       	std	Z+12, r1	; 0x0c
	error      =  0;
     aca:	11 8e       	std	Z+25, r1	; 0x19
     acc:	12 8e       	std	Z+26, r1	; 0x1a
     ace:	13 8e       	std	Z+27, r1	; 0x1b
     ad0:	14 8e       	std	Z+28, r1	; 0x1c
	errSum     =  0;
     ad2:	15 86       	std	Z+13, r1	; 0x0d
     ad4:	16 86       	std	Z+14, r1	; 0x0e
     ad6:	17 86       	std	Z+15, r1	; 0x0f
     ad8:	10 8a       	std	Z+16, r1	; 0x10
	lastinput  =  0;
     ada:	11 a6       	std	Z+41, r1	; 0x29
     adc:	12 a6       	std	Z+42, r1	; 0x2a
     ade:	13 a6       	std	Z+43, r1	; 0x2b
     ae0:	14 a6       	std	Z+44, r1	; 0x2c
	lasterror  =  0;
     ae2:	15 a6       	std	Z+45, r1	; 0x2d
     ae4:	16 a6       	std	Z+46, r1	; 0x2e
     ae6:	17 a6       	std	Z+47, r1	; 0x2f
     ae8:	10 aa       	std	Z+48, r1	; 0x30
	offset     =  0;
     aea:	11 aa       	std	Z+49, r1	; 0x31
     aec:	12 aa       	std	Z+50, r1	; 0x32
     aee:	13 aa       	std	Z+51, r1	; 0x33
     af0:	14 aa       	std	Z+52, r1	; 0x34
	setPoint   =  0;
     af2:	16 aa       	std	Z+54, r1	; 0x36
     af4:	15 aa       	std	Z+53, r1	; 0x35
	PID_Flag   =  false;
     af6:	10 82       	st	Z, r1
     af8:	08 95       	ret

00000afa <_ZN3PID7Set_PIDEfff>:
}
void PID::Set_PID(float KP,float KI,float KD)
{
     afa:	cf 92       	push	r12
     afc:	df 92       	push	r13
     afe:	ef 92       	push	r14
     b00:	ff 92       	push	r15
     b02:	0f 93       	push	r16
     b04:	1f 93       	push	r17
     b06:	fc 01       	movw	r30, r24
	kp = KP;
     b08:	41 83       	std	Z+1, r20	; 0x01
     b0a:	52 83       	std	Z+2, r21	; 0x02
     b0c:	63 83       	std	Z+3, r22	; 0x03
     b0e:	74 83       	std	Z+4, r23	; 0x04
	ki = KI;
     b10:	05 83       	std	Z+5, r16	; 0x05
     b12:	16 83       	std	Z+6, r17	; 0x06
     b14:	27 83       	std	Z+7, r18	; 0x07
     b16:	30 87       	std	Z+8, r19	; 0x08
	kd = KD;
     b18:	c1 86       	std	Z+9, r12	; 0x09
     b1a:	d2 86       	std	Z+10, r13	; 0x0a
     b1c:	e3 86       	std	Z+11, r14	; 0x0b
     b1e:	f4 86       	std	Z+12, r15	; 0x0c
}
     b20:	1f 91       	pop	r17
     b22:	0f 91       	pop	r16
     b24:	ff 90       	pop	r15
     b26:	ef 90       	pop	r14
     b28:	df 90       	pop	r13
     b2a:	cf 90       	pop	r12
     b2c:	08 95       	ret

00000b2e <_ZN3PID11Compute_PIDEf>:
float PID::Compute_PID(float input)
{
     b2e:	8f 92       	push	r8
     b30:	9f 92       	push	r9
     b32:	af 92       	push	r10
     b34:	bf 92       	push	r11
     b36:	cf 92       	push	r12
     b38:	df 92       	push	r13
     b3a:	ef 92       	push	r14
     b3c:	ff 92       	push	r15
     b3e:	0f 93       	push	r16
     b40:	1f 93       	push	r17
     b42:	cf 93       	push	r28
     b44:	df 93       	push	r29
     b46:	ec 01       	movw	r28, r24
     b48:	6a 01       	movw	r12, r20
     b4a:	7b 01       	movw	r14, r22
		error   = setPoint - input;
     b4c:	6d a9       	ldd	r22, Y+53	; 0x35
     b4e:	7e a9       	ldd	r23, Y+54	; 0x36
     b50:	07 2e       	mov	r0, r23
     b52:	00 0c       	add	r0, r0
     b54:	88 0b       	sbc	r24, r24
     b56:	99 0b       	sbc	r25, r25
     b58:	3f d2       	rcall	.+1150   	; 0xfd8 <__floatsisf>
     b5a:	a7 01       	movw	r20, r14
     b5c:	96 01       	movw	r18, r12
     b5e:	38 d1       	rcall	.+624    	; 0xdd0 <__subsf3>
     b60:	6b 01       	movw	r12, r22
     b62:	7c 01       	movw	r14, r24
     b64:	69 8f       	std	Y+25, r22	; 0x19
     b66:	7a 8f       	std	Y+26, r23	; 0x1a
     b68:	8b 8f       	std	Y+27, r24	; 0x1b
     b6a:	9c 8f       	std	Y+28, r25	; 0x1c
	
		
		
		Iterm += (ki*error);
     b6c:	2d 81       	ldd	r18, Y+5	; 0x05
     b6e:	3e 81       	ldd	r19, Y+6	; 0x06
     b70:	4f 81       	ldd	r20, Y+7	; 0x07
     b72:	58 85       	ldd	r21, Y+8	; 0x08
     b74:	e5 d2       	rcall	.+1482   	; 0x1140 <__mulsf3>
     b76:	29 a1       	ldd	r18, Y+33	; 0x21
     b78:	3a a1       	ldd	r19, Y+34	; 0x22
     b7a:	4b a1       	ldd	r20, Y+35	; 0x23
     b7c:	5c a1       	ldd	r21, Y+36	; 0x24
     b7e:	29 d1       	rcall	.+594    	; 0xdd2 <__addsf3>
     b80:	4b 01       	movw	r8, r22
     b82:	5c 01       	movw	r10, r24
		
		if (Iterm > 5000)
     b84:	20 e0       	ldi	r18, 0x00	; 0
     b86:	30 e4       	ldi	r19, 0x40	; 64
     b88:	4c e9       	ldi	r20, 0x9C	; 156
     b8a:	55 e4       	ldi	r21, 0x45	; 69
     b8c:	d5 d2       	rcall	.+1450   	; 0x1138 <__gesf2>
     b8e:	18 16       	cp	r1, r24
     b90:	4c f4       	brge	.+18     	; 0xba4 <_ZN3PID11Compute_PIDEf+0x76>
		{
			Iterm = 5000;
     b92:	80 e0       	ldi	r24, 0x00	; 0
     b94:	90 e4       	ldi	r25, 0x40	; 64
     b96:	ac e9       	ldi	r26, 0x9C	; 156
     b98:	b5 e4       	ldi	r27, 0x45	; 69
     b9a:	89 a3       	std	Y+33, r24	; 0x21
     b9c:	9a a3       	std	Y+34, r25	; 0x22
     b9e:	ab a3       	std	Y+35, r26	; 0x23
     ba0:	bc a3       	std	Y+36, r27	; 0x24
     ba2:	16 c0       	rjmp	.+44     	; 0xbd0 <_ZN3PID11Compute_PIDEf+0xa2>
		}
		else if(Iterm < -5000)
     ba4:	20 e0       	ldi	r18, 0x00	; 0
     ba6:	30 e4       	ldi	r19, 0x40	; 64
     ba8:	4c e9       	ldi	r20, 0x9C	; 156
     baa:	55 ec       	ldi	r21, 0xC5	; 197
     bac:	c5 01       	movw	r24, r10
     bae:	b4 01       	movw	r22, r8
     bb0:	74 d1       	rcall	.+744    	; 0xe9a <__cmpsf2>
     bb2:	88 23       	and	r24, r24
     bb4:	2c f0       	brlt	.+10     	; 0xbc0 <_ZN3PID11Compute_PIDEf+0x92>
{
		error   = setPoint - input;
	
		
		
		Iterm += (ki*error);
     bb6:	89 a2       	std	Y+33, r8	; 0x21
     bb8:	9a a2       	std	Y+34, r9	; 0x22
     bba:	ab a2       	std	Y+35, r10	; 0x23
     bbc:	bc a2       	std	Y+36, r11	; 0x24
     bbe:	08 c0       	rjmp	.+16     	; 0xbd0 <_ZN3PID11Compute_PIDEf+0xa2>
		{
			Iterm = 5000;
		}
		else if(Iterm < -5000)
		{
			Iterm = -5000;
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	90 e4       	ldi	r25, 0x40	; 64
     bc4:	ac e9       	ldi	r26, 0x9C	; 156
     bc6:	b5 ec       	ldi	r27, 0xC5	; 197
     bc8:	89 a3       	std	Y+33, r24	; 0x21
     bca:	9a a3       	std	Y+34, r25	; 0x22
     bcc:	ab a3       	std	Y+35, r26	; 0x23
     bce:	bc a3       	std	Y+36, r27	; 0x24
		}
		float dErr = (error - lasterror);
		output = kp * error + Iterm - kd * dErr;
     bd0:	29 81       	ldd	r18, Y+1	; 0x01
     bd2:	3a 81       	ldd	r19, Y+2	; 0x02
     bd4:	4b 81       	ldd	r20, Y+3	; 0x03
     bd6:	5c 81       	ldd	r21, Y+4	; 0x04
     bd8:	c7 01       	movw	r24, r14
     bda:	b6 01       	movw	r22, r12
     bdc:	b1 d2       	rcall	.+1378   	; 0x1140 <__mulsf3>
     bde:	29 a1       	ldd	r18, Y+33	; 0x21
     be0:	3a a1       	ldd	r19, Y+34	; 0x22
     be2:	4b a1       	ldd	r20, Y+35	; 0x23
     be4:	5c a1       	ldd	r21, Y+36	; 0x24
     be6:	f5 d0       	rcall	.+490    	; 0xdd2 <__addsf3>
     be8:	4b 01       	movw	r8, r22
     bea:	5c 01       	movw	r10, r24
     bec:	2d a5       	ldd	r18, Y+45	; 0x2d
     bee:	3e a5       	ldd	r19, Y+46	; 0x2e
     bf0:	4f a5       	ldd	r20, Y+47	; 0x2f
     bf2:	58 a9       	ldd	r21, Y+48	; 0x30
     bf4:	c7 01       	movw	r24, r14
     bf6:	b6 01       	movw	r22, r12
     bf8:	eb d0       	rcall	.+470    	; 0xdd0 <__subsf3>
     bfa:	29 85       	ldd	r18, Y+9	; 0x09
     bfc:	3a 85       	ldd	r19, Y+10	; 0x0a
     bfe:	4b 85       	ldd	r20, Y+11	; 0x0b
     c00:	5c 85       	ldd	r21, Y+12	; 0x0c
     c02:	9e d2       	rcall	.+1340   	; 0x1140 <__mulsf3>
     c04:	9b 01       	movw	r18, r22
     c06:	ac 01       	movw	r20, r24
     c08:	c5 01       	movw	r24, r10
     c0a:	b4 01       	movw	r22, r8
     c0c:	e1 d0       	rcall	.+450    	; 0xdd0 <__subsf3>
     c0e:	6d 8f       	std	Y+29, r22	; 0x1d
     c10:	7e 8f       	std	Y+30, r23	; 0x1e
     c12:	8f 8f       	std	Y+31, r24	; 0x1f
     c14:	98 a3       	std	Y+32, r25	; 0x20
		constrain(output,minOut,maxOut);
     c16:	09 89       	ldd	r16, Y+17	; 0x11
     c18:	1a 89       	ldd	r17, Y+18	; 0x12
     c1a:	2b 89       	ldd	r18, Y+19	; 0x13
     c1c:	3c 89       	ldd	r19, Y+20	; 0x14
     c1e:	4d 89       	ldd	r20, Y+21	; 0x15
     c20:	5e 89       	ldd	r21, Y+22	; 0x16
     c22:	6f 89       	ldd	r22, Y+23	; 0x17
     c24:	78 8d       	ldd	r23, Y+24	; 0x18
     c26:	ce 01       	movw	r24, r28
     c28:	4d 96       	adiw	r24, 0x1d	; 29
     c2a:	0a df       	rcall	.-492    	; 0xa40 <_Z9constrainRfff>
     c2c:	89 8d       	ldd	r24, Y+25	; 0x19
		//Remember some variables for next time
		//lastinput = input;
		lasterror = error;
     c2e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     c30:	ab 8d       	ldd	r26, Y+27	; 0x1b
     c32:	bc 8d       	ldd	r27, Y+28	; 0x1c
     c34:	8d a7       	std	Y+45, r24	; 0x2d
     c36:	9e a7       	std	Y+46, r25	; 0x2e
     c38:	af a7       	std	Y+47, r26	; 0x2f
     c3a:	b8 ab       	std	Y+48, r27	; 0x30
     c3c:	6d 8d       	ldd	r22, Y+29	; 0x1d
	return output;
     c3e:	7e 8d       	ldd	r23, Y+30	; 0x1e
     c40:	8f 8d       	ldd	r24, Y+31	; 0x1f
     c42:	98 a1       	ldd	r25, Y+32	; 0x20
     c44:	df 91       	pop	r29
}
     c46:	cf 91       	pop	r28
     c48:	1f 91       	pop	r17
     c4a:	0f 91       	pop	r16
     c4c:	ff 90       	pop	r15
     c4e:	ef 90       	pop	r14
     c50:	df 90       	pop	r13
     c52:	cf 90       	pop	r12
     c54:	bf 90       	pop	r11
     c56:	af 90       	pop	r10
     c58:	9f 90       	pop	r9
     c5a:	8f 90       	pop	r8
     c5c:	08 95       	ret

00000c5e <_ZN3PWM7InitPWMEv>:

#include "PWM.h"

void PWM::InitPWM()
{
	OUTPUT(PWM_PIN);
     c5e:	25 9a       	sbi	0x04, 5	; 4
	
	PWM_TCCRA |= (1 << PWM_COM1) | (1 << PWM_WGM1);       //Fast PWM    Set OC1A on compare match , clear OC1A at Bottom (inverting mode)  | (1 << PWM_COM0)
     c60:	e0 e8       	ldi	r30, 0x80	; 128
     c62:	f0 e0       	ldi	r31, 0x00	; 0
     c64:	80 81       	ld	r24, Z
     c66:	82 68       	ori	r24, 0x82	; 130
     c68:	80 83       	st	Z, r24
	PWM_TCCRB |= (1 << PWM_WGM2) | (1 << PWM_WGM3) | (1 << PWM_CS1);
     c6a:	e1 e8       	ldi	r30, 0x81	; 129
     c6c:	f0 e0       	ldi	r31, 0x00	; 0
     c6e:	80 81       	ld	r24, Z
     c70:	8a 61       	ori	r24, 0x1A	; 26
     c72:	80 83       	st	Z, r24
	PWM_ICR    = ICR_TOP;
     c74:	87 e8       	ldi	r24, 0x87	; 135
     c76:	93 e1       	ldi	r25, 0x13	; 19
     c78:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
     c7c:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
     c80:	08 95       	ret

00000c82 <_ZN3PWM11SetOcrValueEi>:
}

void PWM::SetOcrValue(int ocr)
{
	if(ocr >= MAX_VALUE)
     c82:	67 38       	cpi	r22, 0x87	; 135
     c84:	83 e1       	ldi	r24, 0x13	; 19
     c86:	78 07       	cpc	r23, r24
     c88:	14 f0       	brlt	.+4      	; 0xc8e <_ZN3PWM11SetOcrValueEi+0xc>
	{
		ocr = MAX_VALUE;
     c8a:	67 e8       	ldi	r22, 0x87	; 135
     c8c:	73 e1       	ldi	r23, 0x13	; 19
	}
// 	if(ocr <= MIN_VALUE);
// 	{
// 		ocr = MIN_VALUE;
// 	}
	PWM_OCR = ocr;
     c8e:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     c92:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     c96:	08 95       	ret

00000c98 <_ZN8SPIClass5beginEv>:

void SPIClass::begin()
{
  
    //pinMode(SS, OUTPUT);
	DDR(SS_PORT) |= (1 << SS_PIN);
     c98:	20 9a       	sbi	0x04, 0	; 4
    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUTPUT.
    SPCR |= _BV(MSTR);
     c9a:	8c b5       	in	r24, 0x2c	; 44
     c9c:	80 61       	ori	r24, 0x10	; 16
     c9e:	8c bd       	out	0x2c, r24	; 44
    SPCR |= _BV(SPE);
     ca0:	8c b5       	in	r24, 0x2c	; 44
     ca2:	80 64       	ori	r24, 0x40	; 64
     ca4:	8c bd       	out	0x2c, r24	; 44
	SPCR &=~ ((1 << SPR1) | (1 << SPR0));
     ca6:	8c b5       	in	r24, 0x2c	; 44
     ca8:	8c 7f       	andi	r24, 0xFC	; 252
     caa:	8c bd       	out	0x2c, r24	; 44
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
	
    //pinMode(SCK, OUTPUT);
	DDR(SCK_PORT) |= (1 << SCK_PIN);
     cac:	21 9a       	sbi	0x04, 1	; 4
    //pinMode(MOSI, OUTPUT);
	DDR(MOSI_PORT) |= (1 << MOSI_PIN);
     cae:	22 9a       	sbi	0x04, 2	; 4
	
	DDR(TEMP_I_PORT ) |= (1 << TEMP_I_PIN ) | (1 << TEMP_II_PIN );
     cb0:	ea e0       	ldi	r30, 0x0A	; 10
     cb2:	f1 e0       	ldi	r31, 0x01	; 1
     cb4:	80 81       	ld	r24, Z
     cb6:	85 60       	ori	r24, 0x05	; 5
     cb8:	80 83       	st	Z, r24
	TEMP_I_PORT  |= (1 << TEMP_I_PIN ) | (1 << TEMP_II_PIN );
     cba:	eb e0       	ldi	r30, 0x0B	; 11
     cbc:	f1 e0       	ldi	r31, 0x01	; 1
     cbe:	80 81       	ld	r24, Z
     cc0:	85 60       	ori	r24, 0x05	; 5
     cc2:	80 83       	st	Z, r24
     cc4:	08 95       	ret

00000cc6 <_ZN6Timerr11setTimerNumEi>:
	SET_COMPARE(2, A);
}

void Timerr::resetTimer() {
	
	TCNT2 = 0;
     cc6:	fc 01       	movw	r30, r24
     cc8:	71 83       	std	Z+1, r23	; 0x01
     cca:	60 83       	st	Z, r22
     ccc:	08 95       	ret

00000cce <_ZN6Timerr19setCompareInterruptEv>:
     cce:	e0 e7       	ldi	r30, 0x70	; 112
     cd0:	f0 e0       	ldi	r31, 0x00	; 0
     cd2:	80 81       	ld	r24, Z
     cd4:	82 60       	ori	r24, 0x02	; 2
     cd6:	80 83       	st	Z, r24
     cd8:	08 95       	ret

00000cda <_ZN6Timerr16startCustomTimerEi>:
	
}
void Timerr::startCustomTimer(int milli_sec) {
	
		int ocr = (15.625 * milli_sec);
		OCR2A = ocr;
     cda:	07 2e       	mov	r0, r23
     cdc:	00 0c       	add	r0, r0
     cde:	88 0b       	sbc	r24, r24
     ce0:	99 0b       	sbc	r25, r25
     ce2:	7a d1       	rcall	.+756    	; 0xfd8 <__floatsisf>
     ce4:	20 e0       	ldi	r18, 0x00	; 0
     ce6:	30 e0       	ldi	r19, 0x00	; 0
     ce8:	4a e7       	ldi	r20, 0x7A	; 122
     cea:	51 e4       	ldi	r21, 0x41	; 65
     cec:	29 d2       	rcall	.+1106   	; 0x1140 <__mulsf3>
     cee:	41 d1       	rcall	.+642    	; 0xf72 <__fixsfsi>
     cf0:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
		START_TIMERR(2,0,2); //for proteus use 5,0,1 and for real life use 5,0,2
     cf4:	e1 eb       	ldi	r30, 0xB1	; 177
     cf6:	f0 e0       	ldi	r31, 0x00	; 0
     cf8:	80 81       	ld	r24, Z
     cfa:	85 60       	ori	r24, 0x05	; 5
     cfc:	80 83       	st	Z, r24
     cfe:	08 95       	ret

00000d00 <_Z9float2strd>:
unsigned char UART0Receive(void)
{
	char data=buffer;
	buffer=0;
	return data;
}
     d00:	0f 93       	push	r16
     d02:	1f 93       	push	r17
     d04:	03 e7       	ldi	r16, 0x73	; 115
     d06:	12 e0       	ldi	r17, 0x02	; 2
     d08:	21 e0       	ldi	r18, 0x01	; 1
     d0a:	42 e0       	ldi	r20, 0x02	; 2
     d0c:	db d2       	rcall	.+1462   	; 0x12c4 <dtostrf>
     d0e:	c8 01       	movw	r24, r16
     d10:	1f 91       	pop	r17
     d12:	0f 91       	pop	r16
     d14:	08 95       	ret

00000d16 <_Z9initUART0v>:
     d16:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     d1a:	87 e6       	ldi	r24, 0x67	; 103
     d1c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     d20:	88 e9       	ldi	r24, 0x98	; 152
     d22:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
     d26:	86 e0       	ldi	r24, 0x06	; 6
     d28:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     d2c:	08 95       	ret

00000d2e <_Z13UART0Transmith>:
     d2e:	e0 ec       	ldi	r30, 0xC0	; 192
     d30:	f0 e0       	ldi	r31, 0x00	; 0
     d32:	90 81       	ld	r25, Z
     d34:	95 ff       	sbrs	r25, 5
     d36:	fd cf       	rjmp	.-6      	; 0xd32 <_Z13UART0Transmith+0x4>
     d38:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     d3c:	08 95       	ret

00000d3e <_Z17UART0TransmitDatai>:



void UART0TransmitData(int data)
{
     d3e:	0f 93       	push	r16
     d40:	1f 93       	push	r17
     d42:	cf 93       	push	r28
     d44:	df 93       	push	r29
     d46:	cd b7       	in	r28, 0x3d	; 61
     d48:	de b7       	in	r29, 0x3e	; 62
     d4a:	64 97       	sbiw	r28, 0x14	; 20
     d4c:	0f b6       	in	r0, 0x3f	; 63
     d4e:	f8 94       	cli
     d50:	de bf       	out	0x3e, r29	; 62
     d52:	0f be       	out	0x3f, r0	; 63
     d54:	cd bf       	out	0x3d, r28	; 61
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     d56:	4a e0       	ldi	r20, 0x0A	; 10
     d58:	be 01       	movw	r22, r28
     d5a:	6f 5f       	subi	r22, 0xFF	; 255
     d5c:	7f 4f       	sbci	r23, 0xFF	; 255
     d5e:	d1 d2       	rcall	.+1442   	; 0x1302 <__itoa_ncheck>
	char buffer[20];
	char *i=0;
	itoa(data,buffer,10);
	i=buffer;
	while(*i)
     d60:	89 81       	ldd	r24, Y+1	; 0x01
     d62:	88 23       	and	r24, r24
     d64:	49 f0       	breq	.+18     	; 0xd78 <_Z17UART0TransmitDatai+0x3a>
     d66:	8e 01       	movw	r16, r28
     d68:	0e 5f       	subi	r16, 0xFE	; 254
	UART0Transmit(*i++);
     d6a:	1f 4f       	sbci	r17, 0xFF	; 255
     d6c:	e0 df       	rcall	.-64     	; 0xd2e <_Z13UART0Transmith>
{
	char buffer[20];
	char *i=0;
	itoa(data,buffer,10);
	i=buffer;
	while(*i)
     d6e:	f8 01       	movw	r30, r16
     d70:	81 91       	ld	r24, Z+
     d72:	8f 01       	movw	r16, r30
     d74:	81 11       	cpse	r24, r1
     d76:	fa cf       	rjmp	.-12     	; 0xd6c <_Z17UART0TransmitDatai+0x2e>
	UART0Transmit(*i++);
}
     d78:	64 96       	adiw	r28, 0x14	; 20
     d7a:	0f b6       	in	r0, 0x3f	; 63
     d7c:	f8 94       	cli
     d7e:	de bf       	out	0x3e, r29	; 62
     d80:	0f be       	out	0x3f, r0	; 63
     d82:	cd bf       	out	0x3d, r28	; 61
     d84:	df 91       	pop	r29
     d86:	cf 91       	pop	r28
     d88:	1f 91       	pop	r17
     d8a:	0f 91       	pop	r16
     d8c:	08 95       	ret

00000d8e <_Z19UART0TransmitStringPKc>:

void UART0TransmitString(const char *s)
{
     d8e:	cf 93       	push	r28
     d90:	df 93       	push	r29
     d92:	ec 01       	movw	r28, r24
	while(*s)
     d94:	88 81       	ld	r24, Y
     d96:	88 23       	and	r24, r24
     d98:	29 f0       	breq	.+10     	; 0xda4 <_Z19UART0TransmitStringPKc+0x16>
     d9a:	21 96       	adiw	r28, 0x01	; 1
	UART0Transmit(*s++);
     d9c:	c8 df       	rcall	.-112    	; 0xd2e <_Z13UART0Transmith>
	UART0Transmit(*i++);
}

void UART0TransmitString(const char *s)
{
	while(*s)
     d9e:	89 91       	ld	r24, Y+
     da0:	81 11       	cpse	r24, r1
     da2:	fc cf       	rjmp	.-8      	; 0xd9c <_Z19UART0TransmitStringPKc+0xe>
	UART0Transmit(*s++);
}
     da4:	df 91       	pop	r29
     da6:	cf 91       	pop	r28
     da8:	08 95       	ret

00000daa <_Z18UART0TransmitFloatf>:

void UART0TransmitFloat(float num)
{
	const char *temp;
	temp = float2str(num);
     daa:	aa df       	rcall	.-172    	; 0xd00 <_Z9float2strd>
	UART0TransmitString(temp);
     dac:	f0 cf       	rjmp	.-32     	; 0xd8e <_Z19UART0TransmitStringPKc>
     dae:	08 95       	ret

00000db0 <__vector_25>:
     db0:	1f 92       	push	r1
}

ISR(USART0_RX_vect)
{
     db2:	0f 92       	push	r0
     db4:	0f b6       	in	r0, 0x3f	; 63
     db6:	0f 92       	push	r0
     db8:	11 24       	eor	r1, r1
     dba:	8f 93       	push	r24
	buffer=UDR0;
     dbc:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     dc0:	80 93 88 02 	sts	0x0288, r24	; 0x800288 <buffer>
	
}
     dc4:	8f 91       	pop	r24
     dc6:	0f 90       	pop	r0
     dc8:	0f be       	out	0x3f, r0	; 63
     dca:	0f 90       	pop	r0
     dcc:	1f 90       	pop	r1
     dce:	18 95       	reti

00000dd0 <__subsf3>:
     dd0:	50 58       	subi	r21, 0x80	; 128

00000dd2 <__addsf3>:
     dd2:	bb 27       	eor	r27, r27
     dd4:	aa 27       	eor	r26, r26
     dd6:	0e d0       	rcall	.+28     	; 0xdf4 <__addsf3x>
     dd8:	75 c1       	rjmp	.+746    	; 0x10c4 <__fp_round>
     dda:	66 d1       	rcall	.+716    	; 0x10a8 <__fp_pscA>
     ddc:	30 f0       	brcs	.+12     	; 0xdea <__addsf3+0x18>
     dde:	6b d1       	rcall	.+726    	; 0x10b6 <__fp_pscB>
     de0:	20 f0       	brcs	.+8      	; 0xdea <__addsf3+0x18>
     de2:	31 f4       	brne	.+12     	; 0xdf0 <__addsf3+0x1e>
     de4:	9f 3f       	cpi	r25, 0xFF	; 255
     de6:	11 f4       	brne	.+4      	; 0xdec <__addsf3+0x1a>
     de8:	1e f4       	brtc	.+6      	; 0xdf0 <__addsf3+0x1e>
     dea:	5b c1       	rjmp	.+694    	; 0x10a2 <__fp_nan>
     dec:	0e f4       	brtc	.+2      	; 0xdf0 <__addsf3+0x1e>
     dee:	e0 95       	com	r30
     df0:	e7 fb       	bst	r30, 7
     df2:	51 c1       	rjmp	.+674    	; 0x1096 <__fp_inf>

00000df4 <__addsf3x>:
     df4:	e9 2f       	mov	r30, r25
     df6:	77 d1       	rcall	.+750    	; 0x10e6 <__fp_split3>
     df8:	80 f3       	brcs	.-32     	; 0xdda <__addsf3+0x8>
     dfa:	ba 17       	cp	r27, r26
     dfc:	62 07       	cpc	r22, r18
     dfe:	73 07       	cpc	r23, r19
     e00:	84 07       	cpc	r24, r20
     e02:	95 07       	cpc	r25, r21
     e04:	18 f0       	brcs	.+6      	; 0xe0c <__addsf3x+0x18>
     e06:	71 f4       	brne	.+28     	; 0xe24 <__addsf3x+0x30>
     e08:	9e f5       	brtc	.+102    	; 0xe70 <__addsf3x+0x7c>
     e0a:	8f c1       	rjmp	.+798    	; 0x112a <__fp_zero>
     e0c:	0e f4       	brtc	.+2      	; 0xe10 <__addsf3x+0x1c>
     e0e:	e0 95       	com	r30
     e10:	0b 2e       	mov	r0, r27
     e12:	ba 2f       	mov	r27, r26
     e14:	a0 2d       	mov	r26, r0
     e16:	0b 01       	movw	r0, r22
     e18:	b9 01       	movw	r22, r18
     e1a:	90 01       	movw	r18, r0
     e1c:	0c 01       	movw	r0, r24
     e1e:	ca 01       	movw	r24, r20
     e20:	a0 01       	movw	r20, r0
     e22:	11 24       	eor	r1, r1
     e24:	ff 27       	eor	r31, r31
     e26:	59 1b       	sub	r21, r25
     e28:	99 f0       	breq	.+38     	; 0xe50 <__addsf3x+0x5c>
     e2a:	59 3f       	cpi	r21, 0xF9	; 249
     e2c:	50 f4       	brcc	.+20     	; 0xe42 <__addsf3x+0x4e>
     e2e:	50 3e       	cpi	r21, 0xE0	; 224
     e30:	68 f1       	brcs	.+90     	; 0xe8c <__addsf3x+0x98>
     e32:	1a 16       	cp	r1, r26
     e34:	f0 40       	sbci	r31, 0x00	; 0
     e36:	a2 2f       	mov	r26, r18
     e38:	23 2f       	mov	r18, r19
     e3a:	34 2f       	mov	r19, r20
     e3c:	44 27       	eor	r20, r20
     e3e:	58 5f       	subi	r21, 0xF8	; 248
     e40:	f3 cf       	rjmp	.-26     	; 0xe28 <__addsf3x+0x34>
     e42:	46 95       	lsr	r20
     e44:	37 95       	ror	r19
     e46:	27 95       	ror	r18
     e48:	a7 95       	ror	r26
     e4a:	f0 40       	sbci	r31, 0x00	; 0
     e4c:	53 95       	inc	r21
     e4e:	c9 f7       	brne	.-14     	; 0xe42 <__addsf3x+0x4e>
     e50:	7e f4       	brtc	.+30     	; 0xe70 <__addsf3x+0x7c>
     e52:	1f 16       	cp	r1, r31
     e54:	ba 0b       	sbc	r27, r26
     e56:	62 0b       	sbc	r22, r18
     e58:	73 0b       	sbc	r23, r19
     e5a:	84 0b       	sbc	r24, r20
     e5c:	ba f0       	brmi	.+46     	; 0xe8c <__addsf3x+0x98>
     e5e:	91 50       	subi	r25, 0x01	; 1
     e60:	a1 f0       	breq	.+40     	; 0xe8a <__addsf3x+0x96>
     e62:	ff 0f       	add	r31, r31
     e64:	bb 1f       	adc	r27, r27
     e66:	66 1f       	adc	r22, r22
     e68:	77 1f       	adc	r23, r23
     e6a:	88 1f       	adc	r24, r24
     e6c:	c2 f7       	brpl	.-16     	; 0xe5e <__addsf3x+0x6a>
     e6e:	0e c0       	rjmp	.+28     	; 0xe8c <__addsf3x+0x98>
     e70:	ba 0f       	add	r27, r26
     e72:	62 1f       	adc	r22, r18
     e74:	73 1f       	adc	r23, r19
     e76:	84 1f       	adc	r24, r20
     e78:	48 f4       	brcc	.+18     	; 0xe8c <__addsf3x+0x98>
     e7a:	87 95       	ror	r24
     e7c:	77 95       	ror	r23
     e7e:	67 95       	ror	r22
     e80:	b7 95       	ror	r27
     e82:	f7 95       	ror	r31
     e84:	9e 3f       	cpi	r25, 0xFE	; 254
     e86:	08 f0       	brcs	.+2      	; 0xe8a <__addsf3x+0x96>
     e88:	b3 cf       	rjmp	.-154    	; 0xdf0 <__addsf3+0x1e>
     e8a:	93 95       	inc	r25
     e8c:	88 0f       	add	r24, r24
     e8e:	08 f0       	brcs	.+2      	; 0xe92 <__addsf3x+0x9e>
     e90:	99 27       	eor	r25, r25
     e92:	ee 0f       	add	r30, r30
     e94:	97 95       	ror	r25
     e96:	87 95       	ror	r24
     e98:	08 95       	ret

00000e9a <__cmpsf2>:
     e9a:	d9 d0       	rcall	.+434    	; 0x104e <__fp_cmp>
     e9c:	08 f4       	brcc	.+2      	; 0xea0 <__cmpsf2+0x6>
     e9e:	81 e0       	ldi	r24, 0x01	; 1
     ea0:	08 95       	ret

00000ea2 <__divsf3>:
     ea2:	0c d0       	rcall	.+24     	; 0xebc <__divsf3x>
     ea4:	0f c1       	rjmp	.+542    	; 0x10c4 <__fp_round>
     ea6:	07 d1       	rcall	.+526    	; 0x10b6 <__fp_pscB>
     ea8:	40 f0       	brcs	.+16     	; 0xeba <__divsf3+0x18>
     eaa:	fe d0       	rcall	.+508    	; 0x10a8 <__fp_pscA>
     eac:	30 f0       	brcs	.+12     	; 0xeba <__divsf3+0x18>
     eae:	21 f4       	brne	.+8      	; 0xeb8 <__divsf3+0x16>
     eb0:	5f 3f       	cpi	r21, 0xFF	; 255
     eb2:	19 f0       	breq	.+6      	; 0xeba <__divsf3+0x18>
     eb4:	f0 c0       	rjmp	.+480    	; 0x1096 <__fp_inf>
     eb6:	51 11       	cpse	r21, r1
     eb8:	39 c1       	rjmp	.+626    	; 0x112c <__fp_szero>
     eba:	f3 c0       	rjmp	.+486    	; 0x10a2 <__fp_nan>

00000ebc <__divsf3x>:
     ebc:	14 d1       	rcall	.+552    	; 0x10e6 <__fp_split3>
     ebe:	98 f3       	brcs	.-26     	; 0xea6 <__divsf3+0x4>

00000ec0 <__divsf3_pse>:
     ec0:	99 23       	and	r25, r25
     ec2:	c9 f3       	breq	.-14     	; 0xeb6 <__divsf3+0x14>
     ec4:	55 23       	and	r21, r21
     ec6:	b1 f3       	breq	.-20     	; 0xeb4 <__divsf3+0x12>
     ec8:	95 1b       	sub	r25, r21
     eca:	55 0b       	sbc	r21, r21
     ecc:	bb 27       	eor	r27, r27
     ece:	aa 27       	eor	r26, r26
     ed0:	62 17       	cp	r22, r18
     ed2:	73 07       	cpc	r23, r19
     ed4:	84 07       	cpc	r24, r20
     ed6:	38 f0       	brcs	.+14     	; 0xee6 <__divsf3_pse+0x26>
     ed8:	9f 5f       	subi	r25, 0xFF	; 255
     eda:	5f 4f       	sbci	r21, 0xFF	; 255
     edc:	22 0f       	add	r18, r18
     ede:	33 1f       	adc	r19, r19
     ee0:	44 1f       	adc	r20, r20
     ee2:	aa 1f       	adc	r26, r26
     ee4:	a9 f3       	breq	.-22     	; 0xed0 <__divsf3_pse+0x10>
     ee6:	33 d0       	rcall	.+102    	; 0xf4e <__divsf3_pse+0x8e>
     ee8:	0e 2e       	mov	r0, r30
     eea:	3a f0       	brmi	.+14     	; 0xefa <__divsf3_pse+0x3a>
     eec:	e0 e8       	ldi	r30, 0x80	; 128
     eee:	30 d0       	rcall	.+96     	; 0xf50 <__divsf3_pse+0x90>
     ef0:	91 50       	subi	r25, 0x01	; 1
     ef2:	50 40       	sbci	r21, 0x00	; 0
     ef4:	e6 95       	lsr	r30
     ef6:	00 1c       	adc	r0, r0
     ef8:	ca f7       	brpl	.-14     	; 0xeec <__divsf3_pse+0x2c>
     efa:	29 d0       	rcall	.+82     	; 0xf4e <__divsf3_pse+0x8e>
     efc:	fe 2f       	mov	r31, r30
     efe:	27 d0       	rcall	.+78     	; 0xf4e <__divsf3_pse+0x8e>
     f00:	66 0f       	add	r22, r22
     f02:	77 1f       	adc	r23, r23
     f04:	88 1f       	adc	r24, r24
     f06:	bb 1f       	adc	r27, r27
     f08:	26 17       	cp	r18, r22
     f0a:	37 07       	cpc	r19, r23
     f0c:	48 07       	cpc	r20, r24
     f0e:	ab 07       	cpc	r26, r27
     f10:	b0 e8       	ldi	r27, 0x80	; 128
     f12:	09 f0       	breq	.+2      	; 0xf16 <__divsf3_pse+0x56>
     f14:	bb 0b       	sbc	r27, r27
     f16:	80 2d       	mov	r24, r0
     f18:	bf 01       	movw	r22, r30
     f1a:	ff 27       	eor	r31, r31
     f1c:	93 58       	subi	r25, 0x83	; 131
     f1e:	5f 4f       	sbci	r21, 0xFF	; 255
     f20:	2a f0       	brmi	.+10     	; 0xf2c <__divsf3_pse+0x6c>
     f22:	9e 3f       	cpi	r25, 0xFE	; 254
     f24:	51 05       	cpc	r21, r1
     f26:	68 f0       	brcs	.+26     	; 0xf42 <__divsf3_pse+0x82>
     f28:	b6 c0       	rjmp	.+364    	; 0x1096 <__fp_inf>
     f2a:	00 c1       	rjmp	.+512    	; 0x112c <__fp_szero>
     f2c:	5f 3f       	cpi	r21, 0xFF	; 255
     f2e:	ec f3       	brlt	.-6      	; 0xf2a <__divsf3_pse+0x6a>
     f30:	98 3e       	cpi	r25, 0xE8	; 232
     f32:	dc f3       	brlt	.-10     	; 0xf2a <__divsf3_pse+0x6a>
     f34:	86 95       	lsr	r24
     f36:	77 95       	ror	r23
     f38:	67 95       	ror	r22
     f3a:	b7 95       	ror	r27
     f3c:	f7 95       	ror	r31
     f3e:	9f 5f       	subi	r25, 0xFF	; 255
     f40:	c9 f7       	brne	.-14     	; 0xf34 <__divsf3_pse+0x74>
     f42:	88 0f       	add	r24, r24
     f44:	91 1d       	adc	r25, r1
     f46:	96 95       	lsr	r25
     f48:	87 95       	ror	r24
     f4a:	97 f9       	bld	r25, 7
     f4c:	08 95       	ret
     f4e:	e1 e0       	ldi	r30, 0x01	; 1
     f50:	66 0f       	add	r22, r22
     f52:	77 1f       	adc	r23, r23
     f54:	88 1f       	adc	r24, r24
     f56:	bb 1f       	adc	r27, r27
     f58:	62 17       	cp	r22, r18
     f5a:	73 07       	cpc	r23, r19
     f5c:	84 07       	cpc	r24, r20
     f5e:	ba 07       	cpc	r27, r26
     f60:	20 f0       	brcs	.+8      	; 0xf6a <__divsf3_pse+0xaa>
     f62:	62 1b       	sub	r22, r18
     f64:	73 0b       	sbc	r23, r19
     f66:	84 0b       	sbc	r24, r20
     f68:	ba 0b       	sbc	r27, r26
     f6a:	ee 1f       	adc	r30, r30
     f6c:	88 f7       	brcc	.-30     	; 0xf50 <__divsf3_pse+0x90>
     f6e:	e0 95       	com	r30
     f70:	08 95       	ret

00000f72 <__fixsfsi>:
     f72:	04 d0       	rcall	.+8      	; 0xf7c <__fixunssfsi>
     f74:	68 94       	set
     f76:	b1 11       	cpse	r27, r1
     f78:	d9 c0       	rjmp	.+434    	; 0x112c <__fp_szero>
     f7a:	08 95       	ret

00000f7c <__fixunssfsi>:
     f7c:	bc d0       	rcall	.+376    	; 0x10f6 <__fp_splitA>
     f7e:	88 f0       	brcs	.+34     	; 0xfa2 <__fixunssfsi+0x26>
     f80:	9f 57       	subi	r25, 0x7F	; 127
     f82:	90 f0       	brcs	.+36     	; 0xfa8 <__fixunssfsi+0x2c>
     f84:	b9 2f       	mov	r27, r25
     f86:	99 27       	eor	r25, r25
     f88:	b7 51       	subi	r27, 0x17	; 23
     f8a:	a0 f0       	brcs	.+40     	; 0xfb4 <__fixunssfsi+0x38>
     f8c:	d1 f0       	breq	.+52     	; 0xfc2 <__fixunssfsi+0x46>
     f8e:	66 0f       	add	r22, r22
     f90:	77 1f       	adc	r23, r23
     f92:	88 1f       	adc	r24, r24
     f94:	99 1f       	adc	r25, r25
     f96:	1a f0       	brmi	.+6      	; 0xf9e <__fixunssfsi+0x22>
     f98:	ba 95       	dec	r27
     f9a:	c9 f7       	brne	.-14     	; 0xf8e <__fixunssfsi+0x12>
     f9c:	12 c0       	rjmp	.+36     	; 0xfc2 <__fixunssfsi+0x46>
     f9e:	b1 30       	cpi	r27, 0x01	; 1
     fa0:	81 f0       	breq	.+32     	; 0xfc2 <__fixunssfsi+0x46>
     fa2:	c3 d0       	rcall	.+390    	; 0x112a <__fp_zero>
     fa4:	b1 e0       	ldi	r27, 0x01	; 1
     fa6:	08 95       	ret
     fa8:	c0 c0       	rjmp	.+384    	; 0x112a <__fp_zero>
     faa:	67 2f       	mov	r22, r23
     fac:	78 2f       	mov	r23, r24
     fae:	88 27       	eor	r24, r24
     fb0:	b8 5f       	subi	r27, 0xF8	; 248
     fb2:	39 f0       	breq	.+14     	; 0xfc2 <__fixunssfsi+0x46>
     fb4:	b9 3f       	cpi	r27, 0xF9	; 249
     fb6:	cc f3       	brlt	.-14     	; 0xfaa <__fixunssfsi+0x2e>
     fb8:	86 95       	lsr	r24
     fba:	77 95       	ror	r23
     fbc:	67 95       	ror	r22
     fbe:	b3 95       	inc	r27
     fc0:	d9 f7       	brne	.-10     	; 0xfb8 <__fixunssfsi+0x3c>
     fc2:	3e f4       	brtc	.+14     	; 0xfd2 <__fixunssfsi+0x56>
     fc4:	90 95       	com	r25
     fc6:	80 95       	com	r24
     fc8:	70 95       	com	r23
     fca:	61 95       	neg	r22
     fcc:	7f 4f       	sbci	r23, 0xFF	; 255
     fce:	8f 4f       	sbci	r24, 0xFF	; 255
     fd0:	9f 4f       	sbci	r25, 0xFF	; 255
     fd2:	08 95       	ret

00000fd4 <__floatunsisf>:
     fd4:	e8 94       	clt
     fd6:	09 c0       	rjmp	.+18     	; 0xfea <__floatsisf+0x12>

00000fd8 <__floatsisf>:
     fd8:	97 fb       	bst	r25, 7
     fda:	3e f4       	brtc	.+14     	; 0xfea <__floatsisf+0x12>
     fdc:	90 95       	com	r25
     fde:	80 95       	com	r24
     fe0:	70 95       	com	r23
     fe2:	61 95       	neg	r22
     fe4:	7f 4f       	sbci	r23, 0xFF	; 255
     fe6:	8f 4f       	sbci	r24, 0xFF	; 255
     fe8:	9f 4f       	sbci	r25, 0xFF	; 255
     fea:	99 23       	and	r25, r25
     fec:	a9 f0       	breq	.+42     	; 0x1018 <__floatsisf+0x40>
     fee:	f9 2f       	mov	r31, r25
     ff0:	96 e9       	ldi	r25, 0x96	; 150
     ff2:	bb 27       	eor	r27, r27
     ff4:	93 95       	inc	r25
     ff6:	f6 95       	lsr	r31
     ff8:	87 95       	ror	r24
     ffa:	77 95       	ror	r23
     ffc:	67 95       	ror	r22
     ffe:	b7 95       	ror	r27
    1000:	f1 11       	cpse	r31, r1
    1002:	f8 cf       	rjmp	.-16     	; 0xff4 <__floatsisf+0x1c>
    1004:	fa f4       	brpl	.+62     	; 0x1044 <__floatsisf+0x6c>
    1006:	bb 0f       	add	r27, r27
    1008:	11 f4       	brne	.+4      	; 0x100e <__floatsisf+0x36>
    100a:	60 ff       	sbrs	r22, 0
    100c:	1b c0       	rjmp	.+54     	; 0x1044 <__floatsisf+0x6c>
    100e:	6f 5f       	subi	r22, 0xFF	; 255
    1010:	7f 4f       	sbci	r23, 0xFF	; 255
    1012:	8f 4f       	sbci	r24, 0xFF	; 255
    1014:	9f 4f       	sbci	r25, 0xFF	; 255
    1016:	16 c0       	rjmp	.+44     	; 0x1044 <__floatsisf+0x6c>
    1018:	88 23       	and	r24, r24
    101a:	11 f0       	breq	.+4      	; 0x1020 <__floatsisf+0x48>
    101c:	96 e9       	ldi	r25, 0x96	; 150
    101e:	11 c0       	rjmp	.+34     	; 0x1042 <__floatsisf+0x6a>
    1020:	77 23       	and	r23, r23
    1022:	21 f0       	breq	.+8      	; 0x102c <__floatsisf+0x54>
    1024:	9e e8       	ldi	r25, 0x8E	; 142
    1026:	87 2f       	mov	r24, r23
    1028:	76 2f       	mov	r23, r22
    102a:	05 c0       	rjmp	.+10     	; 0x1036 <__floatsisf+0x5e>
    102c:	66 23       	and	r22, r22
    102e:	71 f0       	breq	.+28     	; 0x104c <__floatsisf+0x74>
    1030:	96 e8       	ldi	r25, 0x86	; 134
    1032:	86 2f       	mov	r24, r22
    1034:	70 e0       	ldi	r23, 0x00	; 0
    1036:	60 e0       	ldi	r22, 0x00	; 0
    1038:	2a f0       	brmi	.+10     	; 0x1044 <__floatsisf+0x6c>
    103a:	9a 95       	dec	r25
    103c:	66 0f       	add	r22, r22
    103e:	77 1f       	adc	r23, r23
    1040:	88 1f       	adc	r24, r24
    1042:	da f7       	brpl	.-10     	; 0x103a <__floatsisf+0x62>
    1044:	88 0f       	add	r24, r24
    1046:	96 95       	lsr	r25
    1048:	87 95       	ror	r24
    104a:	97 f9       	bld	r25, 7
    104c:	08 95       	ret

0000104e <__fp_cmp>:
    104e:	99 0f       	add	r25, r25
    1050:	00 08       	sbc	r0, r0
    1052:	55 0f       	add	r21, r21
    1054:	aa 0b       	sbc	r26, r26
    1056:	e0 e8       	ldi	r30, 0x80	; 128
    1058:	fe ef       	ldi	r31, 0xFE	; 254
    105a:	16 16       	cp	r1, r22
    105c:	17 06       	cpc	r1, r23
    105e:	e8 07       	cpc	r30, r24
    1060:	f9 07       	cpc	r31, r25
    1062:	c0 f0       	brcs	.+48     	; 0x1094 <__fp_cmp+0x46>
    1064:	12 16       	cp	r1, r18
    1066:	13 06       	cpc	r1, r19
    1068:	e4 07       	cpc	r30, r20
    106a:	f5 07       	cpc	r31, r21
    106c:	98 f0       	brcs	.+38     	; 0x1094 <__fp_cmp+0x46>
    106e:	62 1b       	sub	r22, r18
    1070:	73 0b       	sbc	r23, r19
    1072:	84 0b       	sbc	r24, r20
    1074:	95 0b       	sbc	r25, r21
    1076:	39 f4       	brne	.+14     	; 0x1086 <__fp_cmp+0x38>
    1078:	0a 26       	eor	r0, r26
    107a:	61 f0       	breq	.+24     	; 0x1094 <__fp_cmp+0x46>
    107c:	23 2b       	or	r18, r19
    107e:	24 2b       	or	r18, r20
    1080:	25 2b       	or	r18, r21
    1082:	21 f4       	brne	.+8      	; 0x108c <__fp_cmp+0x3e>
    1084:	08 95       	ret
    1086:	0a 26       	eor	r0, r26
    1088:	09 f4       	brne	.+2      	; 0x108c <__fp_cmp+0x3e>
    108a:	a1 40       	sbci	r26, 0x01	; 1
    108c:	a6 95       	lsr	r26
    108e:	8f ef       	ldi	r24, 0xFF	; 255
    1090:	81 1d       	adc	r24, r1
    1092:	81 1d       	adc	r24, r1
    1094:	08 95       	ret

00001096 <__fp_inf>:
    1096:	97 f9       	bld	r25, 7
    1098:	9f 67       	ori	r25, 0x7F	; 127
    109a:	80 e8       	ldi	r24, 0x80	; 128
    109c:	70 e0       	ldi	r23, 0x00	; 0
    109e:	60 e0       	ldi	r22, 0x00	; 0
    10a0:	08 95       	ret

000010a2 <__fp_nan>:
    10a2:	9f ef       	ldi	r25, 0xFF	; 255
    10a4:	80 ec       	ldi	r24, 0xC0	; 192
    10a6:	08 95       	ret

000010a8 <__fp_pscA>:
    10a8:	00 24       	eor	r0, r0
    10aa:	0a 94       	dec	r0
    10ac:	16 16       	cp	r1, r22
    10ae:	17 06       	cpc	r1, r23
    10b0:	18 06       	cpc	r1, r24
    10b2:	09 06       	cpc	r0, r25
    10b4:	08 95       	ret

000010b6 <__fp_pscB>:
    10b6:	00 24       	eor	r0, r0
    10b8:	0a 94       	dec	r0
    10ba:	12 16       	cp	r1, r18
    10bc:	13 06       	cpc	r1, r19
    10be:	14 06       	cpc	r1, r20
    10c0:	05 06       	cpc	r0, r21
    10c2:	08 95       	ret

000010c4 <__fp_round>:
    10c4:	09 2e       	mov	r0, r25
    10c6:	03 94       	inc	r0
    10c8:	00 0c       	add	r0, r0
    10ca:	11 f4       	brne	.+4      	; 0x10d0 <__fp_round+0xc>
    10cc:	88 23       	and	r24, r24
    10ce:	52 f0       	brmi	.+20     	; 0x10e4 <__fp_round+0x20>
    10d0:	bb 0f       	add	r27, r27
    10d2:	40 f4       	brcc	.+16     	; 0x10e4 <__fp_round+0x20>
    10d4:	bf 2b       	or	r27, r31
    10d6:	11 f4       	brne	.+4      	; 0x10dc <__fp_round+0x18>
    10d8:	60 ff       	sbrs	r22, 0
    10da:	04 c0       	rjmp	.+8      	; 0x10e4 <__fp_round+0x20>
    10dc:	6f 5f       	subi	r22, 0xFF	; 255
    10de:	7f 4f       	sbci	r23, 0xFF	; 255
    10e0:	8f 4f       	sbci	r24, 0xFF	; 255
    10e2:	9f 4f       	sbci	r25, 0xFF	; 255
    10e4:	08 95       	ret

000010e6 <__fp_split3>:
    10e6:	57 fd       	sbrc	r21, 7
    10e8:	90 58       	subi	r25, 0x80	; 128
    10ea:	44 0f       	add	r20, r20
    10ec:	55 1f       	adc	r21, r21
    10ee:	59 f0       	breq	.+22     	; 0x1106 <__fp_splitA+0x10>
    10f0:	5f 3f       	cpi	r21, 0xFF	; 255
    10f2:	71 f0       	breq	.+28     	; 0x1110 <__fp_splitA+0x1a>
    10f4:	47 95       	ror	r20

000010f6 <__fp_splitA>:
    10f6:	88 0f       	add	r24, r24
    10f8:	97 fb       	bst	r25, 7
    10fa:	99 1f       	adc	r25, r25
    10fc:	61 f0       	breq	.+24     	; 0x1116 <__fp_splitA+0x20>
    10fe:	9f 3f       	cpi	r25, 0xFF	; 255
    1100:	79 f0       	breq	.+30     	; 0x1120 <__fp_splitA+0x2a>
    1102:	87 95       	ror	r24
    1104:	08 95       	ret
    1106:	12 16       	cp	r1, r18
    1108:	13 06       	cpc	r1, r19
    110a:	14 06       	cpc	r1, r20
    110c:	55 1f       	adc	r21, r21
    110e:	f2 cf       	rjmp	.-28     	; 0x10f4 <__fp_split3+0xe>
    1110:	46 95       	lsr	r20
    1112:	f1 df       	rcall	.-30     	; 0x10f6 <__fp_splitA>
    1114:	08 c0       	rjmp	.+16     	; 0x1126 <__fp_splitA+0x30>
    1116:	16 16       	cp	r1, r22
    1118:	17 06       	cpc	r1, r23
    111a:	18 06       	cpc	r1, r24
    111c:	99 1f       	adc	r25, r25
    111e:	f1 cf       	rjmp	.-30     	; 0x1102 <__fp_splitA+0xc>
    1120:	86 95       	lsr	r24
    1122:	71 05       	cpc	r23, r1
    1124:	61 05       	cpc	r22, r1
    1126:	08 94       	sec
    1128:	08 95       	ret

0000112a <__fp_zero>:
    112a:	e8 94       	clt

0000112c <__fp_szero>:
    112c:	bb 27       	eor	r27, r27
    112e:	66 27       	eor	r22, r22
    1130:	77 27       	eor	r23, r23
    1132:	cb 01       	movw	r24, r22
    1134:	97 f9       	bld	r25, 7
    1136:	08 95       	ret

00001138 <__gesf2>:
    1138:	8a df       	rcall	.-236    	; 0x104e <__fp_cmp>
    113a:	08 f4       	brcc	.+2      	; 0x113e <__gesf2+0x6>
    113c:	8f ef       	ldi	r24, 0xFF	; 255
    113e:	08 95       	ret

00001140 <__mulsf3>:
    1140:	0b d0       	rcall	.+22     	; 0x1158 <__mulsf3x>
    1142:	c0 cf       	rjmp	.-128    	; 0x10c4 <__fp_round>
    1144:	b1 df       	rcall	.-158    	; 0x10a8 <__fp_pscA>
    1146:	28 f0       	brcs	.+10     	; 0x1152 <__mulsf3+0x12>
    1148:	b6 df       	rcall	.-148    	; 0x10b6 <__fp_pscB>
    114a:	18 f0       	brcs	.+6      	; 0x1152 <__mulsf3+0x12>
    114c:	95 23       	and	r25, r21
    114e:	09 f0       	breq	.+2      	; 0x1152 <__mulsf3+0x12>
    1150:	a2 cf       	rjmp	.-188    	; 0x1096 <__fp_inf>
    1152:	a7 cf       	rjmp	.-178    	; 0x10a2 <__fp_nan>
    1154:	11 24       	eor	r1, r1
    1156:	ea cf       	rjmp	.-44     	; 0x112c <__fp_szero>

00001158 <__mulsf3x>:
    1158:	c6 df       	rcall	.-116    	; 0x10e6 <__fp_split3>
    115a:	a0 f3       	brcs	.-24     	; 0x1144 <__mulsf3+0x4>

0000115c <__mulsf3_pse>:
    115c:	95 9f       	mul	r25, r21
    115e:	d1 f3       	breq	.-12     	; 0x1154 <__mulsf3+0x14>
    1160:	95 0f       	add	r25, r21
    1162:	50 e0       	ldi	r21, 0x00	; 0
    1164:	55 1f       	adc	r21, r21
    1166:	62 9f       	mul	r22, r18
    1168:	f0 01       	movw	r30, r0
    116a:	72 9f       	mul	r23, r18
    116c:	bb 27       	eor	r27, r27
    116e:	f0 0d       	add	r31, r0
    1170:	b1 1d       	adc	r27, r1
    1172:	63 9f       	mul	r22, r19
    1174:	aa 27       	eor	r26, r26
    1176:	f0 0d       	add	r31, r0
    1178:	b1 1d       	adc	r27, r1
    117a:	aa 1f       	adc	r26, r26
    117c:	64 9f       	mul	r22, r20
    117e:	66 27       	eor	r22, r22
    1180:	b0 0d       	add	r27, r0
    1182:	a1 1d       	adc	r26, r1
    1184:	66 1f       	adc	r22, r22
    1186:	82 9f       	mul	r24, r18
    1188:	22 27       	eor	r18, r18
    118a:	b0 0d       	add	r27, r0
    118c:	a1 1d       	adc	r26, r1
    118e:	62 1f       	adc	r22, r18
    1190:	73 9f       	mul	r23, r19
    1192:	b0 0d       	add	r27, r0
    1194:	a1 1d       	adc	r26, r1
    1196:	62 1f       	adc	r22, r18
    1198:	83 9f       	mul	r24, r19
    119a:	a0 0d       	add	r26, r0
    119c:	61 1d       	adc	r22, r1
    119e:	22 1f       	adc	r18, r18
    11a0:	74 9f       	mul	r23, r20
    11a2:	33 27       	eor	r19, r19
    11a4:	a0 0d       	add	r26, r0
    11a6:	61 1d       	adc	r22, r1
    11a8:	23 1f       	adc	r18, r19
    11aa:	84 9f       	mul	r24, r20
    11ac:	60 0d       	add	r22, r0
    11ae:	21 1d       	adc	r18, r1
    11b0:	82 2f       	mov	r24, r18
    11b2:	76 2f       	mov	r23, r22
    11b4:	6a 2f       	mov	r22, r26
    11b6:	11 24       	eor	r1, r1
    11b8:	9f 57       	subi	r25, 0x7F	; 127
    11ba:	50 40       	sbci	r21, 0x00	; 0
    11bc:	8a f0       	brmi	.+34     	; 0x11e0 <__mulsf3_pse+0x84>
    11be:	e1 f0       	breq	.+56     	; 0x11f8 <__mulsf3_pse+0x9c>
    11c0:	88 23       	and	r24, r24
    11c2:	4a f0       	brmi	.+18     	; 0x11d6 <__mulsf3_pse+0x7a>
    11c4:	ee 0f       	add	r30, r30
    11c6:	ff 1f       	adc	r31, r31
    11c8:	bb 1f       	adc	r27, r27
    11ca:	66 1f       	adc	r22, r22
    11cc:	77 1f       	adc	r23, r23
    11ce:	88 1f       	adc	r24, r24
    11d0:	91 50       	subi	r25, 0x01	; 1
    11d2:	50 40       	sbci	r21, 0x00	; 0
    11d4:	a9 f7       	brne	.-22     	; 0x11c0 <__mulsf3_pse+0x64>
    11d6:	9e 3f       	cpi	r25, 0xFE	; 254
    11d8:	51 05       	cpc	r21, r1
    11da:	70 f0       	brcs	.+28     	; 0x11f8 <__mulsf3_pse+0x9c>
    11dc:	5c cf       	rjmp	.-328    	; 0x1096 <__fp_inf>
    11de:	a6 cf       	rjmp	.-180    	; 0x112c <__fp_szero>
    11e0:	5f 3f       	cpi	r21, 0xFF	; 255
    11e2:	ec f3       	brlt	.-6      	; 0x11de <__mulsf3_pse+0x82>
    11e4:	98 3e       	cpi	r25, 0xE8	; 232
    11e6:	dc f3       	brlt	.-10     	; 0x11de <__mulsf3_pse+0x82>
    11e8:	86 95       	lsr	r24
    11ea:	77 95       	ror	r23
    11ec:	67 95       	ror	r22
    11ee:	b7 95       	ror	r27
    11f0:	f7 95       	ror	r31
    11f2:	e7 95       	ror	r30
    11f4:	9f 5f       	subi	r25, 0xFF	; 255
    11f6:	c1 f7       	brne	.-16     	; 0x11e8 <__mulsf3_pse+0x8c>
    11f8:	fe 2b       	or	r31, r30
    11fa:	88 0f       	add	r24, r24
    11fc:	91 1d       	adc	r25, r1
    11fe:	96 95       	lsr	r25
    1200:	87 95       	ror	r24
    1202:	97 f9       	bld	r25, 7
    1204:	08 95       	ret
    1206:	11 f4       	brne	.+4      	; 0x120c <__mulsf3_pse+0xb0>
    1208:	0e f4       	brtc	.+2      	; 0x120c <__mulsf3_pse+0xb0>
    120a:	4b cf       	rjmp	.-362    	; 0x10a2 <__fp_nan>
    120c:	3e c0       	rjmp	.+124    	; 0x128a <__fp_mpack>

0000120e <sqrt>:
    120e:	73 df       	rcall	.-282    	; 0x10f6 <__fp_splitA>
    1210:	d0 f3       	brcs	.-12     	; 0x1206 <__mulsf3_pse+0xaa>
    1212:	99 23       	and	r25, r25
    1214:	d9 f3       	breq	.-10     	; 0x120c <__mulsf3_pse+0xb0>
    1216:	ce f3       	brts	.-14     	; 0x120a <__mulsf3_pse+0xae>
    1218:	9f 57       	subi	r25, 0x7F	; 127
    121a:	55 0b       	sbc	r21, r21
    121c:	87 ff       	sbrs	r24, 7
    121e:	43 d0       	rcall	.+134    	; 0x12a6 <__fp_norm2>
    1220:	00 24       	eor	r0, r0
    1222:	a0 e6       	ldi	r26, 0x60	; 96
    1224:	40 ea       	ldi	r20, 0xA0	; 160
    1226:	90 01       	movw	r18, r0
    1228:	80 58       	subi	r24, 0x80	; 128
    122a:	56 95       	lsr	r21
    122c:	97 95       	ror	r25
    122e:	28 f4       	brcc	.+10     	; 0x123a <sqrt+0x2c>
    1230:	80 5c       	subi	r24, 0xC0	; 192
    1232:	66 0f       	add	r22, r22
    1234:	77 1f       	adc	r23, r23
    1236:	88 1f       	adc	r24, r24
    1238:	20 f0       	brcs	.+8      	; 0x1242 <sqrt+0x34>
    123a:	26 17       	cp	r18, r22
    123c:	37 07       	cpc	r19, r23
    123e:	48 07       	cpc	r20, r24
    1240:	30 f4       	brcc	.+12     	; 0x124e <sqrt+0x40>
    1242:	62 1b       	sub	r22, r18
    1244:	73 0b       	sbc	r23, r19
    1246:	84 0b       	sbc	r24, r20
    1248:	20 29       	or	r18, r0
    124a:	31 29       	or	r19, r1
    124c:	4a 2b       	or	r20, r26
    124e:	a6 95       	lsr	r26
    1250:	17 94       	ror	r1
    1252:	07 94       	ror	r0
    1254:	20 25       	eor	r18, r0
    1256:	31 25       	eor	r19, r1
    1258:	4a 27       	eor	r20, r26
    125a:	58 f7       	brcc	.-42     	; 0x1232 <sqrt+0x24>
    125c:	66 0f       	add	r22, r22
    125e:	77 1f       	adc	r23, r23
    1260:	88 1f       	adc	r24, r24
    1262:	20 f0       	brcs	.+8      	; 0x126c <sqrt+0x5e>
    1264:	26 17       	cp	r18, r22
    1266:	37 07       	cpc	r19, r23
    1268:	48 07       	cpc	r20, r24
    126a:	30 f4       	brcc	.+12     	; 0x1278 <sqrt+0x6a>
    126c:	62 0b       	sbc	r22, r18
    126e:	73 0b       	sbc	r23, r19
    1270:	84 0b       	sbc	r24, r20
    1272:	20 0d       	add	r18, r0
    1274:	31 1d       	adc	r19, r1
    1276:	41 1d       	adc	r20, r1
    1278:	a0 95       	com	r26
    127a:	81 f7       	brne	.-32     	; 0x125c <sqrt+0x4e>
    127c:	b9 01       	movw	r22, r18
    127e:	84 2f       	mov	r24, r20
    1280:	91 58       	subi	r25, 0x81	; 129
    1282:	88 0f       	add	r24, r24
    1284:	96 95       	lsr	r25
    1286:	87 95       	ror	r24
    1288:	08 95       	ret

0000128a <__fp_mpack>:
    128a:	9f 3f       	cpi	r25, 0xFF	; 255
    128c:	31 f0       	breq	.+12     	; 0x129a <__fp_mpack_finite+0xc>

0000128e <__fp_mpack_finite>:
    128e:	91 50       	subi	r25, 0x01	; 1
    1290:	20 f4       	brcc	.+8      	; 0x129a <__fp_mpack_finite+0xc>
    1292:	87 95       	ror	r24
    1294:	77 95       	ror	r23
    1296:	67 95       	ror	r22
    1298:	b7 95       	ror	r27
    129a:	88 0f       	add	r24, r24
    129c:	91 1d       	adc	r25, r1
    129e:	96 95       	lsr	r25
    12a0:	87 95       	ror	r24
    12a2:	97 f9       	bld	r25, 7
    12a4:	08 95       	ret

000012a6 <__fp_norm2>:
    12a6:	91 50       	subi	r25, 0x01	; 1
    12a8:	50 40       	sbci	r21, 0x00	; 0
    12aa:	66 0f       	add	r22, r22
    12ac:	77 1f       	adc	r23, r23
    12ae:	88 1f       	adc	r24, r24
    12b0:	d2 f7       	brpl	.-12     	; 0x12a6 <__fp_norm2>
    12b2:	08 95       	ret

000012b4 <__tablejump2__>:
    12b4:	ee 0f       	add	r30, r30
    12b6:	ff 1f       	adc	r31, r31
    12b8:	88 1f       	adc	r24, r24
    12ba:	8b bf       	out	0x3b, r24	; 59
    12bc:	07 90       	elpm	r0, Z+
    12be:	f6 91       	elpm	r31, Z
    12c0:	e0 2d       	mov	r30, r0
    12c2:	19 94       	eijmp

000012c4 <dtostrf>:
    12c4:	ef 92       	push	r14
    12c6:	0f 93       	push	r16
    12c8:	1f 93       	push	r17
    12ca:	cf 93       	push	r28
    12cc:	df 93       	push	r29
    12ce:	e8 01       	movw	r28, r16
    12d0:	47 fd       	sbrc	r20, 7
    12d2:	02 c0       	rjmp	.+4      	; 0x12d8 <dtostrf+0x14>
    12d4:	34 e0       	ldi	r19, 0x04	; 4
    12d6:	01 c0       	rjmp	.+2      	; 0x12da <dtostrf+0x16>
    12d8:	34 e1       	ldi	r19, 0x14	; 20
    12da:	04 2e       	mov	r0, r20
    12dc:	00 0c       	add	r0, r0
    12de:	55 0b       	sbc	r21, r21
    12e0:	57 ff       	sbrs	r21, 7
    12e2:	03 c0       	rjmp	.+6      	; 0x12ea <dtostrf+0x26>
    12e4:	51 95       	neg	r21
    12e6:	41 95       	neg	r20
    12e8:	51 09       	sbc	r21, r1
    12ea:	e3 2e       	mov	r14, r19
    12ec:	02 2f       	mov	r16, r18
    12ee:	24 2f       	mov	r18, r20
    12f0:	ae 01       	movw	r20, r28
    12f2:	2a d0       	rcall	.+84     	; 0x1348 <dtoa_prf>
    12f4:	ce 01       	movw	r24, r28
    12f6:	df 91       	pop	r29
    12f8:	cf 91       	pop	r28
    12fa:	1f 91       	pop	r17
    12fc:	0f 91       	pop	r16
    12fe:	ef 90       	pop	r14
    1300:	08 95       	ret

00001302 <__itoa_ncheck>:
    1302:	bb 27       	eor	r27, r27
    1304:	4a 30       	cpi	r20, 0x0A	; 10
    1306:	31 f4       	brne	.+12     	; 0x1314 <__itoa_ncheck+0x12>
    1308:	99 23       	and	r25, r25
    130a:	22 f4       	brpl	.+8      	; 0x1314 <__itoa_ncheck+0x12>
    130c:	bd e2       	ldi	r27, 0x2D	; 45
    130e:	90 95       	com	r25
    1310:	81 95       	neg	r24
    1312:	9f 4f       	sbci	r25, 0xFF	; 255
    1314:	01 c0       	rjmp	.+2      	; 0x1318 <__utoa_common>

00001316 <__utoa_ncheck>:
    1316:	bb 27       	eor	r27, r27

00001318 <__utoa_common>:
    1318:	fb 01       	movw	r30, r22
    131a:	55 27       	eor	r21, r21
    131c:	aa 27       	eor	r26, r26
    131e:	88 0f       	add	r24, r24
    1320:	99 1f       	adc	r25, r25
    1322:	aa 1f       	adc	r26, r26
    1324:	a4 17       	cp	r26, r20
    1326:	10 f0       	brcs	.+4      	; 0x132c <__utoa_common+0x14>
    1328:	a4 1b       	sub	r26, r20
    132a:	83 95       	inc	r24
    132c:	50 51       	subi	r21, 0x10	; 16
    132e:	b9 f7       	brne	.-18     	; 0x131e <__utoa_common+0x6>
    1330:	a0 5d       	subi	r26, 0xD0	; 208
    1332:	aa 33       	cpi	r26, 0x3A	; 58
    1334:	08 f0       	brcs	.+2      	; 0x1338 <__utoa_common+0x20>
    1336:	a9 5d       	subi	r26, 0xD9	; 217
    1338:	a1 93       	st	Z+, r26
    133a:	00 97       	sbiw	r24, 0x00	; 0
    133c:	79 f7       	brne	.-34     	; 0x131c <__utoa_common+0x4>
    133e:	b1 11       	cpse	r27, r1
    1340:	b1 93       	st	Z+, r27
    1342:	11 92       	st	Z+, r1
    1344:	cb 01       	movw	r24, r22
    1346:	4e c2       	rjmp	.+1180   	; 0x17e4 <strrev>

00001348 <dtoa_prf>:
    1348:	8f 92       	push	r8
    134a:	9f 92       	push	r9
    134c:	af 92       	push	r10
    134e:	bf 92       	push	r11
    1350:	cf 92       	push	r12
    1352:	df 92       	push	r13
    1354:	ef 92       	push	r14
    1356:	ff 92       	push	r15
    1358:	0f 93       	push	r16
    135a:	1f 93       	push	r17
    135c:	cf 93       	push	r28
    135e:	df 93       	push	r29
    1360:	cd b7       	in	r28, 0x3d	; 61
    1362:	de b7       	in	r29, 0x3e	; 62
    1364:	29 97       	sbiw	r28, 0x09	; 9
    1366:	0f b6       	in	r0, 0x3f	; 63
    1368:	f8 94       	cli
    136a:	de bf       	out	0x3e, r29	; 62
    136c:	0f be       	out	0x3f, r0	; 63
    136e:	cd bf       	out	0x3d, r28	; 61
    1370:	6a 01       	movw	r12, r20
    1372:	12 2f       	mov	r17, r18
    1374:	b0 2e       	mov	r11, r16
    1376:	2b e3       	ldi	r18, 0x3B	; 59
    1378:	20 17       	cp	r18, r16
    137a:	20 f0       	brcs	.+8      	; 0x1384 <dtoa_prf+0x3c>
    137c:	ff 24       	eor	r15, r15
    137e:	f3 94       	inc	r15
    1380:	f0 0e       	add	r15, r16
    1382:	02 c0       	rjmp	.+4      	; 0x1388 <dtoa_prf+0x40>
    1384:	2c e3       	ldi	r18, 0x3C	; 60
    1386:	f2 2e       	mov	r15, r18
    1388:	0f 2d       	mov	r16, r15
    138a:	27 e0       	ldi	r18, 0x07	; 7
    138c:	ae 01       	movw	r20, r28
    138e:	4f 5f       	subi	r20, 0xFF	; 255
    1390:	5f 4f       	sbci	r21, 0xFF	; 255
    1392:	50 d1       	rcall	.+672    	; 0x1634 <__ftoa_engine>
    1394:	bc 01       	movw	r22, r24
    1396:	49 81       	ldd	r20, Y+1	; 0x01
    1398:	84 2f       	mov	r24, r20
    139a:	89 70       	andi	r24, 0x09	; 9
    139c:	81 30       	cpi	r24, 0x01	; 1
    139e:	31 f0       	breq	.+12     	; 0x13ac <dtoa_prf+0x64>
    13a0:	e1 fc       	sbrc	r14, 1
    13a2:	06 c0       	rjmp	.+12     	; 0x13b0 <dtoa_prf+0x68>
    13a4:	e0 fe       	sbrs	r14, 0
    13a6:	06 c0       	rjmp	.+12     	; 0x13b4 <dtoa_prf+0x6c>
    13a8:	90 e2       	ldi	r25, 0x20	; 32
    13aa:	05 c0       	rjmp	.+10     	; 0x13b6 <dtoa_prf+0x6e>
    13ac:	9d e2       	ldi	r25, 0x2D	; 45
    13ae:	03 c0       	rjmp	.+6      	; 0x13b6 <dtoa_prf+0x6e>
    13b0:	9b e2       	ldi	r25, 0x2B	; 43
    13b2:	01 c0       	rjmp	.+2      	; 0x13b6 <dtoa_prf+0x6e>
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	5e 2d       	mov	r21, r14
    13b8:	50 71       	andi	r21, 0x10	; 16
    13ba:	43 ff       	sbrs	r20, 3
    13bc:	3c c0       	rjmp	.+120    	; 0x1436 <dtoa_prf+0xee>
    13be:	91 11       	cpse	r25, r1
    13c0:	02 c0       	rjmp	.+4      	; 0x13c6 <dtoa_prf+0x7e>
    13c2:	83 e0       	ldi	r24, 0x03	; 3
    13c4:	01 c0       	rjmp	.+2      	; 0x13c8 <dtoa_prf+0x80>
    13c6:	84 e0       	ldi	r24, 0x04	; 4
    13c8:	81 17       	cp	r24, r17
    13ca:	18 f4       	brcc	.+6      	; 0x13d2 <dtoa_prf+0x8a>
    13cc:	21 2f       	mov	r18, r17
    13ce:	28 1b       	sub	r18, r24
    13d0:	01 c0       	rjmp	.+2      	; 0x13d4 <dtoa_prf+0x8c>
    13d2:	20 e0       	ldi	r18, 0x00	; 0
    13d4:	51 11       	cpse	r21, r1
    13d6:	0b c0       	rjmp	.+22     	; 0x13ee <dtoa_prf+0xa6>
    13d8:	f6 01       	movw	r30, r12
    13da:	82 2f       	mov	r24, r18
    13dc:	30 e2       	ldi	r19, 0x20	; 32
    13de:	88 23       	and	r24, r24
    13e0:	19 f0       	breq	.+6      	; 0x13e8 <dtoa_prf+0xa0>
    13e2:	31 93       	st	Z+, r19
    13e4:	81 50       	subi	r24, 0x01	; 1
    13e6:	fb cf       	rjmp	.-10     	; 0x13de <dtoa_prf+0x96>
    13e8:	c2 0e       	add	r12, r18
    13ea:	d1 1c       	adc	r13, r1
    13ec:	20 e0       	ldi	r18, 0x00	; 0
    13ee:	99 23       	and	r25, r25
    13f0:	29 f0       	breq	.+10     	; 0x13fc <dtoa_prf+0xb4>
    13f2:	d6 01       	movw	r26, r12
    13f4:	9c 93       	st	X, r25
    13f6:	f6 01       	movw	r30, r12
    13f8:	31 96       	adiw	r30, 0x01	; 1
    13fa:	6f 01       	movw	r12, r30
    13fc:	c6 01       	movw	r24, r12
    13fe:	03 96       	adiw	r24, 0x03	; 3
    1400:	e2 fe       	sbrs	r14, 2
    1402:	0a c0       	rjmp	.+20     	; 0x1418 <dtoa_prf+0xd0>
    1404:	3e e4       	ldi	r19, 0x4E	; 78
    1406:	d6 01       	movw	r26, r12
    1408:	3c 93       	st	X, r19
    140a:	41 e4       	ldi	r20, 0x41	; 65
    140c:	11 96       	adiw	r26, 0x01	; 1
    140e:	4c 93       	st	X, r20
    1410:	11 97       	sbiw	r26, 0x01	; 1
    1412:	12 96       	adiw	r26, 0x02	; 2
    1414:	3c 93       	st	X, r19
    1416:	06 c0       	rjmp	.+12     	; 0x1424 <dtoa_prf+0xdc>
    1418:	3e e6       	ldi	r19, 0x6E	; 110
    141a:	f6 01       	movw	r30, r12
    141c:	30 83       	st	Z, r19
    141e:	41 e6       	ldi	r20, 0x61	; 97
    1420:	41 83       	std	Z+1, r20	; 0x01
    1422:	32 83       	std	Z+2, r19	; 0x02
    1424:	fc 01       	movw	r30, r24
    1426:	32 2f       	mov	r19, r18
    1428:	40 e2       	ldi	r20, 0x20	; 32
    142a:	33 23       	and	r19, r19
    142c:	09 f4       	brne	.+2      	; 0x1430 <dtoa_prf+0xe8>
    142e:	42 c0       	rjmp	.+132    	; 0x14b4 <dtoa_prf+0x16c>
    1430:	41 93       	st	Z+, r20
    1432:	31 50       	subi	r19, 0x01	; 1
    1434:	fa cf       	rjmp	.-12     	; 0x142a <dtoa_prf+0xe2>
    1436:	42 ff       	sbrs	r20, 2
    1438:	44 c0       	rjmp	.+136    	; 0x14c2 <dtoa_prf+0x17a>
    143a:	91 11       	cpse	r25, r1
    143c:	02 c0       	rjmp	.+4      	; 0x1442 <dtoa_prf+0xfa>
    143e:	83 e0       	ldi	r24, 0x03	; 3
    1440:	01 c0       	rjmp	.+2      	; 0x1444 <dtoa_prf+0xfc>
    1442:	84 e0       	ldi	r24, 0x04	; 4
    1444:	81 17       	cp	r24, r17
    1446:	18 f4       	brcc	.+6      	; 0x144e <dtoa_prf+0x106>
    1448:	21 2f       	mov	r18, r17
    144a:	28 1b       	sub	r18, r24
    144c:	01 c0       	rjmp	.+2      	; 0x1450 <dtoa_prf+0x108>
    144e:	20 e0       	ldi	r18, 0x00	; 0
    1450:	51 11       	cpse	r21, r1
    1452:	0b c0       	rjmp	.+22     	; 0x146a <dtoa_prf+0x122>
    1454:	f6 01       	movw	r30, r12
    1456:	82 2f       	mov	r24, r18
    1458:	30 e2       	ldi	r19, 0x20	; 32
    145a:	88 23       	and	r24, r24
    145c:	19 f0       	breq	.+6      	; 0x1464 <dtoa_prf+0x11c>
    145e:	31 93       	st	Z+, r19
    1460:	81 50       	subi	r24, 0x01	; 1
    1462:	fb cf       	rjmp	.-10     	; 0x145a <dtoa_prf+0x112>
    1464:	c2 0e       	add	r12, r18
    1466:	d1 1c       	adc	r13, r1
    1468:	20 e0       	ldi	r18, 0x00	; 0
    146a:	99 23       	and	r25, r25
    146c:	29 f0       	breq	.+10     	; 0x1478 <dtoa_prf+0x130>
    146e:	d6 01       	movw	r26, r12
    1470:	9c 93       	st	X, r25
    1472:	f6 01       	movw	r30, r12
    1474:	31 96       	adiw	r30, 0x01	; 1
    1476:	6f 01       	movw	r12, r30
    1478:	c6 01       	movw	r24, r12
    147a:	03 96       	adiw	r24, 0x03	; 3
    147c:	e2 fe       	sbrs	r14, 2
    147e:	0b c0       	rjmp	.+22     	; 0x1496 <dtoa_prf+0x14e>
    1480:	39 e4       	ldi	r19, 0x49	; 73
    1482:	d6 01       	movw	r26, r12
    1484:	3c 93       	st	X, r19
    1486:	3e e4       	ldi	r19, 0x4E	; 78
    1488:	11 96       	adiw	r26, 0x01	; 1
    148a:	3c 93       	st	X, r19
    148c:	11 97       	sbiw	r26, 0x01	; 1
    148e:	36 e4       	ldi	r19, 0x46	; 70
    1490:	12 96       	adiw	r26, 0x02	; 2
    1492:	3c 93       	st	X, r19
    1494:	07 c0       	rjmp	.+14     	; 0x14a4 <dtoa_prf+0x15c>
    1496:	39 e6       	ldi	r19, 0x69	; 105
    1498:	f6 01       	movw	r30, r12
    149a:	30 83       	st	Z, r19
    149c:	3e e6       	ldi	r19, 0x6E	; 110
    149e:	31 83       	std	Z+1, r19	; 0x01
    14a0:	36 e6       	ldi	r19, 0x66	; 102
    14a2:	32 83       	std	Z+2, r19	; 0x02
    14a4:	fc 01       	movw	r30, r24
    14a6:	32 2f       	mov	r19, r18
    14a8:	40 e2       	ldi	r20, 0x20	; 32
    14aa:	33 23       	and	r19, r19
    14ac:	19 f0       	breq	.+6      	; 0x14b4 <dtoa_prf+0x16c>
    14ae:	41 93       	st	Z+, r20
    14b0:	31 50       	subi	r19, 0x01	; 1
    14b2:	fb cf       	rjmp	.-10     	; 0x14aa <dtoa_prf+0x162>
    14b4:	fc 01       	movw	r30, r24
    14b6:	e2 0f       	add	r30, r18
    14b8:	f1 1d       	adc	r31, r1
    14ba:	10 82       	st	Z, r1
    14bc:	8e ef       	ldi	r24, 0xFE	; 254
    14be:	9f ef       	ldi	r25, 0xFF	; 255
    14c0:	a6 c0       	rjmp	.+332    	; 0x160e <dtoa_prf+0x2c6>
    14c2:	21 e0       	ldi	r18, 0x01	; 1
    14c4:	30 e0       	ldi	r19, 0x00	; 0
    14c6:	91 11       	cpse	r25, r1
    14c8:	02 c0       	rjmp	.+4      	; 0x14ce <dtoa_prf+0x186>
    14ca:	20 e0       	ldi	r18, 0x00	; 0
    14cc:	30 e0       	ldi	r19, 0x00	; 0
    14ce:	16 16       	cp	r1, r22
    14d0:	17 06       	cpc	r1, r23
    14d2:	1c f4       	brge	.+6      	; 0x14da <dtoa_prf+0x192>
    14d4:	fb 01       	movw	r30, r22
    14d6:	31 96       	adiw	r30, 0x01	; 1
    14d8:	02 c0       	rjmp	.+4      	; 0x14de <dtoa_prf+0x196>
    14da:	e1 e0       	ldi	r30, 0x01	; 1
    14dc:	f0 e0       	ldi	r31, 0x00	; 0
    14de:	2e 0f       	add	r18, r30
    14e0:	3f 1f       	adc	r19, r31
    14e2:	bb 20       	and	r11, r11
    14e4:	21 f0       	breq	.+8      	; 0x14ee <dtoa_prf+0x1a6>
    14e6:	eb 2d       	mov	r30, r11
    14e8:	f0 e0       	ldi	r31, 0x00	; 0
    14ea:	31 96       	adiw	r30, 0x01	; 1
    14ec:	02 c0       	rjmp	.+4      	; 0x14f2 <dtoa_prf+0x1aa>
    14ee:	e0 e0       	ldi	r30, 0x00	; 0
    14f0:	f0 e0       	ldi	r31, 0x00	; 0
    14f2:	2e 0f       	add	r18, r30
    14f4:	3f 1f       	adc	r19, r31
    14f6:	e1 2f       	mov	r30, r17
    14f8:	f0 e0       	ldi	r31, 0x00	; 0
    14fa:	2e 17       	cp	r18, r30
    14fc:	3f 07       	cpc	r19, r31
    14fe:	1c f4       	brge	.+6      	; 0x1506 <dtoa_prf+0x1be>
    1500:	12 1b       	sub	r17, r18
    1502:	21 2f       	mov	r18, r17
    1504:	01 c0       	rjmp	.+2      	; 0x1508 <dtoa_prf+0x1c0>
    1506:	20 e0       	ldi	r18, 0x00	; 0
    1508:	8e 2d       	mov	r24, r14
    150a:	88 71       	andi	r24, 0x18	; 24
    150c:	59 f4       	brne	.+22     	; 0x1524 <dtoa_prf+0x1dc>
    150e:	f6 01       	movw	r30, r12
    1510:	82 2f       	mov	r24, r18
    1512:	30 e2       	ldi	r19, 0x20	; 32
    1514:	88 23       	and	r24, r24
    1516:	19 f0       	breq	.+6      	; 0x151e <dtoa_prf+0x1d6>
    1518:	31 93       	st	Z+, r19
    151a:	81 50       	subi	r24, 0x01	; 1
    151c:	fb cf       	rjmp	.-10     	; 0x1514 <dtoa_prf+0x1cc>
    151e:	c2 0e       	add	r12, r18
    1520:	d1 1c       	adc	r13, r1
    1522:	20 e0       	ldi	r18, 0x00	; 0
    1524:	99 23       	and	r25, r25
    1526:	29 f0       	breq	.+10     	; 0x1532 <dtoa_prf+0x1ea>
    1528:	d6 01       	movw	r26, r12
    152a:	9c 93       	st	X, r25
    152c:	f6 01       	movw	r30, r12
    152e:	31 96       	adiw	r30, 0x01	; 1
    1530:	6f 01       	movw	r12, r30
    1532:	51 11       	cpse	r21, r1
    1534:	0b c0       	rjmp	.+22     	; 0x154c <dtoa_prf+0x204>
    1536:	f6 01       	movw	r30, r12
    1538:	82 2f       	mov	r24, r18
    153a:	90 e3       	ldi	r25, 0x30	; 48
    153c:	88 23       	and	r24, r24
    153e:	19 f0       	breq	.+6      	; 0x1546 <dtoa_prf+0x1fe>
    1540:	91 93       	st	Z+, r25
    1542:	81 50       	subi	r24, 0x01	; 1
    1544:	fb cf       	rjmp	.-10     	; 0x153c <dtoa_prf+0x1f4>
    1546:	c2 0e       	add	r12, r18
    1548:	d1 1c       	adc	r13, r1
    154a:	20 e0       	ldi	r18, 0x00	; 0
    154c:	0f 2d       	mov	r16, r15
    154e:	06 0f       	add	r16, r22
    1550:	9a 81       	ldd	r25, Y+2	; 0x02
    1552:	34 2f       	mov	r19, r20
    1554:	30 71       	andi	r19, 0x10	; 16
    1556:	44 ff       	sbrs	r20, 4
    1558:	03 c0       	rjmp	.+6      	; 0x1560 <dtoa_prf+0x218>
    155a:	91 33       	cpi	r25, 0x31	; 49
    155c:	09 f4       	brne	.+2      	; 0x1560 <dtoa_prf+0x218>
    155e:	01 50       	subi	r16, 0x01	; 1
    1560:	10 16       	cp	r1, r16
    1562:	24 f4       	brge	.+8      	; 0x156c <dtoa_prf+0x224>
    1564:	09 30       	cpi	r16, 0x09	; 9
    1566:	18 f0       	brcs	.+6      	; 0x156e <dtoa_prf+0x226>
    1568:	08 e0       	ldi	r16, 0x08	; 8
    156a:	01 c0       	rjmp	.+2      	; 0x156e <dtoa_prf+0x226>
    156c:	01 e0       	ldi	r16, 0x01	; 1
    156e:	ab 01       	movw	r20, r22
    1570:	77 ff       	sbrs	r23, 7
    1572:	02 c0       	rjmp	.+4      	; 0x1578 <dtoa_prf+0x230>
    1574:	40 e0       	ldi	r20, 0x00	; 0
    1576:	50 e0       	ldi	r21, 0x00	; 0
    1578:	fb 01       	movw	r30, r22
    157a:	e4 1b       	sub	r30, r20
    157c:	f5 0b       	sbc	r31, r21
    157e:	a1 e0       	ldi	r26, 0x01	; 1
    1580:	b0 e0       	ldi	r27, 0x00	; 0
    1582:	ac 0f       	add	r26, r28
    1584:	bd 1f       	adc	r27, r29
    1586:	ea 0f       	add	r30, r26
    1588:	fb 1f       	adc	r31, r27
    158a:	8e e2       	ldi	r24, 0x2E	; 46
    158c:	a8 2e       	mov	r10, r24
    158e:	4b 01       	movw	r8, r22
    1590:	80 1a       	sub	r8, r16
    1592:	91 08       	sbc	r9, r1
    1594:	0b 2d       	mov	r16, r11
    1596:	10 e0       	ldi	r17, 0x00	; 0
    1598:	11 95       	neg	r17
    159a:	01 95       	neg	r16
    159c:	11 09       	sbc	r17, r1
    159e:	4f 3f       	cpi	r20, 0xFF	; 255
    15a0:	bf ef       	ldi	r27, 0xFF	; 255
    15a2:	5b 07       	cpc	r21, r27
    15a4:	21 f4       	brne	.+8      	; 0x15ae <dtoa_prf+0x266>
    15a6:	d6 01       	movw	r26, r12
    15a8:	ac 92       	st	X, r10
    15aa:	11 96       	adiw	r26, 0x01	; 1
    15ac:	6d 01       	movw	r12, r26
    15ae:	64 17       	cp	r22, r20
    15b0:	75 07       	cpc	r23, r21
    15b2:	2c f0       	brlt	.+10     	; 0x15be <dtoa_prf+0x276>
    15b4:	84 16       	cp	r8, r20
    15b6:	95 06       	cpc	r9, r21
    15b8:	14 f4       	brge	.+4      	; 0x15be <dtoa_prf+0x276>
    15ba:	81 81       	ldd	r24, Z+1	; 0x01
    15bc:	01 c0       	rjmp	.+2      	; 0x15c0 <dtoa_prf+0x278>
    15be:	80 e3       	ldi	r24, 0x30	; 48
    15c0:	41 50       	subi	r20, 0x01	; 1
    15c2:	51 09       	sbc	r21, r1
    15c4:	31 96       	adiw	r30, 0x01	; 1
    15c6:	d6 01       	movw	r26, r12
    15c8:	11 96       	adiw	r26, 0x01	; 1
    15ca:	7d 01       	movw	r14, r26
    15cc:	40 17       	cp	r20, r16
    15ce:	51 07       	cpc	r21, r17
    15d0:	24 f0       	brlt	.+8      	; 0x15da <dtoa_prf+0x292>
    15d2:	d6 01       	movw	r26, r12
    15d4:	8c 93       	st	X, r24
    15d6:	67 01       	movw	r12, r14
    15d8:	e2 cf       	rjmp	.-60     	; 0x159e <dtoa_prf+0x256>
    15da:	64 17       	cp	r22, r20
    15dc:	75 07       	cpc	r23, r21
    15de:	39 f4       	brne	.+14     	; 0x15ee <dtoa_prf+0x2a6>
    15e0:	96 33       	cpi	r25, 0x36	; 54
    15e2:	20 f4       	brcc	.+8      	; 0x15ec <dtoa_prf+0x2a4>
    15e4:	95 33       	cpi	r25, 0x35	; 53
    15e6:	19 f4       	brne	.+6      	; 0x15ee <dtoa_prf+0x2a6>
    15e8:	31 11       	cpse	r19, r1
    15ea:	01 c0       	rjmp	.+2      	; 0x15ee <dtoa_prf+0x2a6>
    15ec:	81 e3       	ldi	r24, 0x31	; 49
    15ee:	f6 01       	movw	r30, r12
    15f0:	80 83       	st	Z, r24
    15f2:	f7 01       	movw	r30, r14
    15f4:	82 2f       	mov	r24, r18
    15f6:	90 e2       	ldi	r25, 0x20	; 32
    15f8:	88 23       	and	r24, r24
    15fa:	19 f0       	breq	.+6      	; 0x1602 <dtoa_prf+0x2ba>
    15fc:	91 93       	st	Z+, r25
    15fe:	81 50       	subi	r24, 0x01	; 1
    1600:	fb cf       	rjmp	.-10     	; 0x15f8 <dtoa_prf+0x2b0>
    1602:	f7 01       	movw	r30, r14
    1604:	e2 0f       	add	r30, r18
    1606:	f1 1d       	adc	r31, r1
    1608:	10 82       	st	Z, r1
    160a:	80 e0       	ldi	r24, 0x00	; 0
    160c:	90 e0       	ldi	r25, 0x00	; 0
    160e:	29 96       	adiw	r28, 0x09	; 9
    1610:	0f b6       	in	r0, 0x3f	; 63
    1612:	f8 94       	cli
    1614:	de bf       	out	0x3e, r29	; 62
    1616:	0f be       	out	0x3f, r0	; 63
    1618:	cd bf       	out	0x3d, r28	; 61
    161a:	df 91       	pop	r29
    161c:	cf 91       	pop	r28
    161e:	1f 91       	pop	r17
    1620:	0f 91       	pop	r16
    1622:	ff 90       	pop	r15
    1624:	ef 90       	pop	r14
    1626:	df 90       	pop	r13
    1628:	cf 90       	pop	r12
    162a:	bf 90       	pop	r11
    162c:	af 90       	pop	r10
    162e:	9f 90       	pop	r9
    1630:	8f 90       	pop	r8
    1632:	08 95       	ret

00001634 <__ftoa_engine>:
    1634:	28 30       	cpi	r18, 0x08	; 8
    1636:	08 f0       	brcs	.+2      	; 0x163a <__ftoa_engine+0x6>
    1638:	27 e0       	ldi	r18, 0x07	; 7
    163a:	33 27       	eor	r19, r19
    163c:	da 01       	movw	r26, r20
    163e:	99 0f       	add	r25, r25
    1640:	31 1d       	adc	r19, r1
    1642:	87 fd       	sbrc	r24, 7
    1644:	91 60       	ori	r25, 0x01	; 1
    1646:	00 96       	adiw	r24, 0x00	; 0
    1648:	61 05       	cpc	r22, r1
    164a:	71 05       	cpc	r23, r1
    164c:	39 f4       	brne	.+14     	; 0x165c <__ftoa_engine+0x28>
    164e:	32 60       	ori	r19, 0x02	; 2
    1650:	2e 5f       	subi	r18, 0xFE	; 254
    1652:	3d 93       	st	X+, r19
    1654:	30 e3       	ldi	r19, 0x30	; 48
    1656:	2a 95       	dec	r18
    1658:	e1 f7       	brne	.-8      	; 0x1652 <__ftoa_engine+0x1e>
    165a:	08 95       	ret
    165c:	9f 3f       	cpi	r25, 0xFF	; 255
    165e:	30 f0       	brcs	.+12     	; 0x166c <__ftoa_engine+0x38>
    1660:	80 38       	cpi	r24, 0x80	; 128
    1662:	71 05       	cpc	r23, r1
    1664:	61 05       	cpc	r22, r1
    1666:	09 f0       	breq	.+2      	; 0x166a <__ftoa_engine+0x36>
    1668:	3c 5f       	subi	r19, 0xFC	; 252
    166a:	3c 5f       	subi	r19, 0xFC	; 252
    166c:	3d 93       	st	X+, r19
    166e:	91 30       	cpi	r25, 0x01	; 1
    1670:	08 f0       	brcs	.+2      	; 0x1674 <__ftoa_engine+0x40>
    1672:	80 68       	ori	r24, 0x80	; 128
    1674:	91 1d       	adc	r25, r1
    1676:	df 93       	push	r29
    1678:	cf 93       	push	r28
    167a:	1f 93       	push	r17
    167c:	0f 93       	push	r16
    167e:	ff 92       	push	r15
    1680:	ef 92       	push	r14
    1682:	19 2f       	mov	r17, r25
    1684:	98 7f       	andi	r25, 0xF8	; 248
    1686:	96 95       	lsr	r25
    1688:	e9 2f       	mov	r30, r25
    168a:	96 95       	lsr	r25
    168c:	96 95       	lsr	r25
    168e:	e9 0f       	add	r30, r25
    1690:	ff 27       	eor	r31, r31
    1692:	e2 5c       	subi	r30, 0xC2	; 194
    1694:	fe 4f       	sbci	r31, 0xFE	; 254
    1696:	99 27       	eor	r25, r25
    1698:	33 27       	eor	r19, r19
    169a:	ee 24       	eor	r14, r14
    169c:	ff 24       	eor	r15, r15
    169e:	a7 01       	movw	r20, r14
    16a0:	e7 01       	movw	r28, r14
    16a2:	05 90       	lpm	r0, Z+
    16a4:	08 94       	sec
    16a6:	07 94       	ror	r0
    16a8:	28 f4       	brcc	.+10     	; 0x16b4 <__ftoa_engine+0x80>
    16aa:	36 0f       	add	r19, r22
    16ac:	e7 1e       	adc	r14, r23
    16ae:	f8 1e       	adc	r15, r24
    16b0:	49 1f       	adc	r20, r25
    16b2:	51 1d       	adc	r21, r1
    16b4:	66 0f       	add	r22, r22
    16b6:	77 1f       	adc	r23, r23
    16b8:	88 1f       	adc	r24, r24
    16ba:	99 1f       	adc	r25, r25
    16bc:	06 94       	lsr	r0
    16be:	a1 f7       	brne	.-24     	; 0x16a8 <__ftoa_engine+0x74>
    16c0:	05 90       	lpm	r0, Z+
    16c2:	07 94       	ror	r0
    16c4:	28 f4       	brcc	.+10     	; 0x16d0 <__ftoa_engine+0x9c>
    16c6:	e7 0e       	add	r14, r23
    16c8:	f8 1e       	adc	r15, r24
    16ca:	49 1f       	adc	r20, r25
    16cc:	56 1f       	adc	r21, r22
    16ce:	c1 1d       	adc	r28, r1
    16d0:	77 0f       	add	r23, r23
    16d2:	88 1f       	adc	r24, r24
    16d4:	99 1f       	adc	r25, r25
    16d6:	66 1f       	adc	r22, r22
    16d8:	06 94       	lsr	r0
    16da:	a1 f7       	brne	.-24     	; 0x16c4 <__ftoa_engine+0x90>
    16dc:	05 90       	lpm	r0, Z+
    16de:	07 94       	ror	r0
    16e0:	28 f4       	brcc	.+10     	; 0x16ec <__ftoa_engine+0xb8>
    16e2:	f8 0e       	add	r15, r24
    16e4:	49 1f       	adc	r20, r25
    16e6:	56 1f       	adc	r21, r22
    16e8:	c7 1f       	adc	r28, r23
    16ea:	d1 1d       	adc	r29, r1
    16ec:	88 0f       	add	r24, r24
    16ee:	99 1f       	adc	r25, r25
    16f0:	66 1f       	adc	r22, r22
    16f2:	77 1f       	adc	r23, r23
    16f4:	06 94       	lsr	r0
    16f6:	a1 f7       	brne	.-24     	; 0x16e0 <__ftoa_engine+0xac>
    16f8:	05 90       	lpm	r0, Z+
    16fa:	07 94       	ror	r0
    16fc:	20 f4       	brcc	.+8      	; 0x1706 <__ftoa_engine+0xd2>
    16fe:	49 0f       	add	r20, r25
    1700:	56 1f       	adc	r21, r22
    1702:	c7 1f       	adc	r28, r23
    1704:	d8 1f       	adc	r29, r24
    1706:	99 0f       	add	r25, r25
    1708:	66 1f       	adc	r22, r22
    170a:	77 1f       	adc	r23, r23
    170c:	88 1f       	adc	r24, r24
    170e:	06 94       	lsr	r0
    1710:	a9 f7       	brne	.-22     	; 0x16fc <__ftoa_engine+0xc8>
    1712:	84 91       	lpm	r24, Z
    1714:	10 95       	com	r17
    1716:	17 70       	andi	r17, 0x07	; 7
    1718:	41 f0       	breq	.+16     	; 0x172a <__ftoa_engine+0xf6>
    171a:	d6 95       	lsr	r29
    171c:	c7 95       	ror	r28
    171e:	57 95       	ror	r21
    1720:	47 95       	ror	r20
    1722:	f7 94       	ror	r15
    1724:	e7 94       	ror	r14
    1726:	1a 95       	dec	r17
    1728:	c1 f7       	brne	.-16     	; 0x171a <__ftoa_engine+0xe6>
    172a:	e4 ee       	ldi	r30, 0xE4	; 228
    172c:	f0 e0       	ldi	r31, 0x00	; 0
    172e:	68 94       	set
    1730:	15 90       	lpm	r1, Z+
    1732:	15 91       	lpm	r17, Z+
    1734:	35 91       	lpm	r19, Z+
    1736:	65 91       	lpm	r22, Z+
    1738:	95 91       	lpm	r25, Z+
    173a:	05 90       	lpm	r0, Z+
    173c:	7f e2       	ldi	r23, 0x2F	; 47
    173e:	73 95       	inc	r23
    1740:	e1 18       	sub	r14, r1
    1742:	f1 0a       	sbc	r15, r17
    1744:	43 0b       	sbc	r20, r19
    1746:	56 0b       	sbc	r21, r22
    1748:	c9 0b       	sbc	r28, r25
    174a:	d0 09       	sbc	r29, r0
    174c:	c0 f7       	brcc	.-16     	; 0x173e <__ftoa_engine+0x10a>
    174e:	e1 0c       	add	r14, r1
    1750:	f1 1e       	adc	r15, r17
    1752:	43 1f       	adc	r20, r19
    1754:	56 1f       	adc	r21, r22
    1756:	c9 1f       	adc	r28, r25
    1758:	d0 1d       	adc	r29, r0
    175a:	7e f4       	brtc	.+30     	; 0x177a <__ftoa_engine+0x146>
    175c:	70 33       	cpi	r23, 0x30	; 48
    175e:	11 f4       	brne	.+4      	; 0x1764 <__ftoa_engine+0x130>
    1760:	8a 95       	dec	r24
    1762:	e6 cf       	rjmp	.-52     	; 0x1730 <__ftoa_engine+0xfc>
    1764:	e8 94       	clt
    1766:	01 50       	subi	r16, 0x01	; 1
    1768:	30 f0       	brcs	.+12     	; 0x1776 <__ftoa_engine+0x142>
    176a:	08 0f       	add	r16, r24
    176c:	0a f4       	brpl	.+2      	; 0x1770 <__ftoa_engine+0x13c>
    176e:	00 27       	eor	r16, r16
    1770:	02 17       	cp	r16, r18
    1772:	08 f4       	brcc	.+2      	; 0x1776 <__ftoa_engine+0x142>
    1774:	20 2f       	mov	r18, r16
    1776:	23 95       	inc	r18
    1778:	02 2f       	mov	r16, r18
    177a:	7a 33       	cpi	r23, 0x3A	; 58
    177c:	28 f0       	brcs	.+10     	; 0x1788 <__ftoa_engine+0x154>
    177e:	79 e3       	ldi	r23, 0x39	; 57
    1780:	7d 93       	st	X+, r23
    1782:	2a 95       	dec	r18
    1784:	e9 f7       	brne	.-6      	; 0x1780 <__ftoa_engine+0x14c>
    1786:	10 c0       	rjmp	.+32     	; 0x17a8 <__ftoa_engine+0x174>
    1788:	7d 93       	st	X+, r23
    178a:	2a 95       	dec	r18
    178c:	89 f6       	brne	.-94     	; 0x1730 <__ftoa_engine+0xfc>
    178e:	06 94       	lsr	r0
    1790:	97 95       	ror	r25
    1792:	67 95       	ror	r22
    1794:	37 95       	ror	r19
    1796:	17 95       	ror	r17
    1798:	17 94       	ror	r1
    179a:	e1 18       	sub	r14, r1
    179c:	f1 0a       	sbc	r15, r17
    179e:	43 0b       	sbc	r20, r19
    17a0:	56 0b       	sbc	r21, r22
    17a2:	c9 0b       	sbc	r28, r25
    17a4:	d0 09       	sbc	r29, r0
    17a6:	98 f0       	brcs	.+38     	; 0x17ce <__ftoa_engine+0x19a>
    17a8:	23 95       	inc	r18
    17aa:	7e 91       	ld	r23, -X
    17ac:	73 95       	inc	r23
    17ae:	7a 33       	cpi	r23, 0x3A	; 58
    17b0:	08 f0       	brcs	.+2      	; 0x17b4 <__ftoa_engine+0x180>
    17b2:	70 e3       	ldi	r23, 0x30	; 48
    17b4:	7c 93       	st	X, r23
    17b6:	20 13       	cpse	r18, r16
    17b8:	b8 f7       	brcc	.-18     	; 0x17a8 <__ftoa_engine+0x174>
    17ba:	7e 91       	ld	r23, -X
    17bc:	70 61       	ori	r23, 0x10	; 16
    17be:	7d 93       	st	X+, r23
    17c0:	30 f0       	brcs	.+12     	; 0x17ce <__ftoa_engine+0x19a>
    17c2:	83 95       	inc	r24
    17c4:	71 e3       	ldi	r23, 0x31	; 49
    17c6:	7d 93       	st	X+, r23
    17c8:	70 e3       	ldi	r23, 0x30	; 48
    17ca:	2a 95       	dec	r18
    17cc:	e1 f7       	brne	.-8      	; 0x17c6 <__ftoa_engine+0x192>
    17ce:	11 24       	eor	r1, r1
    17d0:	ef 90       	pop	r14
    17d2:	ff 90       	pop	r15
    17d4:	0f 91       	pop	r16
    17d6:	1f 91       	pop	r17
    17d8:	cf 91       	pop	r28
    17da:	df 91       	pop	r29
    17dc:	99 27       	eor	r25, r25
    17de:	87 fd       	sbrc	r24, 7
    17e0:	90 95       	com	r25
    17e2:	08 95       	ret

000017e4 <strrev>:
    17e4:	dc 01       	movw	r26, r24
    17e6:	fc 01       	movw	r30, r24
    17e8:	67 2f       	mov	r22, r23
    17ea:	71 91       	ld	r23, Z+
    17ec:	77 23       	and	r23, r23
    17ee:	e1 f7       	brne	.-8      	; 0x17e8 <strrev+0x4>
    17f0:	32 97       	sbiw	r30, 0x02	; 2
    17f2:	04 c0       	rjmp	.+8      	; 0x17fc <strrev+0x18>
    17f4:	7c 91       	ld	r23, X
    17f6:	6d 93       	st	X+, r22
    17f8:	70 83       	st	Z, r23
    17fa:	62 91       	ld	r22, -Z
    17fc:	ae 17       	cp	r26, r30
    17fe:	bf 07       	cpc	r27, r31
    1800:	c8 f3       	brcs	.-14     	; 0x17f4 <strrev+0x10>
    1802:	08 95       	ret

00001804 <_exit>:
    1804:	f8 94       	cli

00001806 <__stop_program>:
    1806:	ff cf       	rjmp	.-2      	; 0x1806 <__stop_program>
